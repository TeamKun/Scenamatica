{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Scenamatica ScenarioFile",
  "type": "object",
  "definitions": {
    "version": {
      "type": "string",
      "pattern": "^v?(?<major>[0-9]\\d*)\\.(?<minor>0|[1-9]\\d*)(\\.(?<patch>0|[1-9]\\d*))?(-(?<preRelease>(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(?<buildMetadata>[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
      "examples": [
        "v3.0.0",
        "3.0.0-alpha.1",
        "v3.0.0-alpha.1+build.1",
        "3.0.0+build.1",
        "v3.0.0+build.1.2.b8f12d7",
        "3.0.0-beta.2",
        "v3.0.0-beta.11",
        "3.0.0-rc.1",
        "v3.0.0-rc.1+build.1",
        "3.0.0-rc.1+build.1.2.b8f12d7"
      ]
    },
    "namespacedKey": {
      "type": "string",
      "pattern": "^([a-z0-9_/]+:)?[a-z0-9_/]+$",
      "description": "名前空間付きキーです。 名前空間を指定しない場合は, minecraft: が暗黙的に指定されます。",
      "examples": [
        "minecraft:stone",
        "stone"
      ]
    },
    "scenarios": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/scenario"
      },
      "maxProperties": 1
    },
    "scenario": {
      "type": "object",
      "$ref": "#/definitions/action",
      "properties": {
        "type": {
          "type": "string",
          "description": "シナリオの種類です。",
          "oneOf": [
            {
              "const": "expect",
              "description": "アクションがプラグインによって実行されるか監視します。"
            },
            {
              "const": "execute",
              "description": "アクションを実行します。"
            },
            {
              "const": "require",
              "description": "条件が満たされているかチェックします。"
            }
          ]
        },
        "timeout": {
          "type": "integer",
          "description": "シナリオのタイムアウト時間を**チック**で指定します。-1 で無効化します。",
          "minimum": -1,
          "default": 100
        },
        "runif": {
          "type": "object",
          "description": "シナリオの実行条件を定義します。アクションで定義します。満たしていない場合はスキップされます。",
          "$ref": "#/definitions/action"
        }
      },
      "required": [
        "type",
        "action"
      ]
    },
    "action": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "description": "アクションの種類です。 ",
          "enum": [
            "message",
            "player_advancement",
            "player_animation",
            "player_death",
            "player_gamemode",
            "player_hotbar",
            "player_interact_block",
            "player_launch_projectile",
            "server_log",
            "server_plugin_enable",
            "server_plugin_disable",
            "command_dispatch",
            "milestone"
          ]
        },
        "with": {
          "type": "object",
          "description": "アクションの種類によっては, このプロパティにアクションの引数を指定します。",
          "additionalProperties": true
        }
      },
      "required": [
        "action"
      ],
      "$comment": "以下はアクションの引数をひたすら記述する。",
      "allOf": [
        {
          "if": {
            "properties": {
              "action": {
                "const": "message",
                "description": "プレイヤーにメッセージを送信したり, 送信されたことを検知します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/scenamatica/message"
              }
            },
            "required": [
              "with"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_advancement",
                "description": "プレイヤーの進捗の達成や達成度を検知します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player/advancement"
              }
            },
            "required": [
              "with"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_animation",
                "description": "プレイヤーのアニメーションを検知します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player/animation"
              }
            },
            "required": [
              "with"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_death",
                "description": "プレイヤーを殺したり, 殺されたことを検知します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player/death"
              }
            },
            "required": [
              "with"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_gamemode",
                "description": "プレイヤーのゲームモードを変更したり, 変更されたことを検知, またはゲームモードを判定します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player/gamemode"
              }
            },
            "required": [
              "with"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_hotbar",
                "description": "プレイヤーが手荷物アイテムを変更したり, 変更されたことを検知します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player/hotbar"
              }
            },
            "required": [
              "with"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_interact_block",
                "description": "プレイヤーがブロックやエンティティを右クリックしたり, 右クリックされたことを検知します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player/interact_block"
              }
            },
            "required": [
              "with"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_projectile_launch",
                "description": "プレイヤーが投げ物を発射したり, 発射されたことを検知します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player/launch_projectile"
              }
            },
            "required": [
              "with"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "command_dispatch",
                "description": "コマンドを実行したり, 実行されたことを検知します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/server/command_dispatch"
              }
            },
            "required": [
              "with"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "server_log",
                "description": "サーバのログを検知したり, ログを送信します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/server/log"
              }
            },
            "required": [
              "with"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "server_plugin_disable",
                "description": "プラグインが無効化されたり, 無効化されたことを検知します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/server/plugin_disable"
              }
            },
            "required": [
              "with"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "server_plugin_enable",
                "description": "プラグインが有効化されたり, 有効化されたことを検知します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/server/plugin_enable"
              }
            },
            "required": [
              "with"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "milestone",
                "description": "マイルストーンを達成したり, 達成されたことを検知します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/scenamatica/milestone"
              }
            },
            "required": [
              "with"
            ]
          }
        }
      ],
      "definitions": {
        "player": {
          "advancement": {
            "properties": {
              "target": {
                "type": "string",
                "description": "進捗を達成するプレイヤーです。",
                "maxLength": 16
              },
              "advancement": {
                "type": "string",
                "description": "達成する進捗です。",
                "maxLength": 32767,
                "$ref": "#/definitions/namespacedKey"
              },
              "criterion": {
                "type": "string",
                "description": "達成する条件です。省略した場合は全ての条件を達成します。",
                "maxLength": 32767,
                "$ref": "#/definitions/namespacedKey"
              }
            },
            "required": [
              "target",
              "advancement"
            ]
          },
          "animation": {
            "properties": {
              "target": {
                "type": "string",
                "description": "アニメーションを再生するプレイヤーです。",
                "maxLength": 16
              },
              "type": {
                "type": "string",
                "description": "再生するアニメーションの種類です。",
                "enum": [
                  "arm_swing",
                  "ARM_SWING"
                ]
              }
            },
            "required": [
              "target",
              "type"
            ]
          },
          "death": {
            "properties": {
              "target": {
                "type": "string",
                "description": "死ぬターゲットです。",
                "maxLength": 16
              },
              "killer": {
                "type": "string",
                "description": "ターゲットを殺すプレイヤーです。",
                "maxLength": 16
              },
              "deathMessage": {
                "type": "string",
                "description": "死亡メッセージです。"
              },
              "exp": {
                "type": "integer",
                "description": "死亡時したプレイヤの新しい経験値です。",
                "minimum": 0
              },
              "level": {
                "type": "integer",
                "description": "死亡時したプレイヤの新しいレベルです。",
                "minimum": 0
              },
              "totalExp": {
                "type": "integer",
                "description": "死亡時したプレイヤの新しい総経験値です。",
                "minimum": 0
              },
              "keepLevel": {
                "type": "boolean",
                "description": "死亡時したプレイヤのレベルを保持するかどうかです。"
              },
              "keepInventory": {
                "type": "boolean",
                "description": "死亡時したプレイヤのインベントリを保持するかどうかです。"
              },
              "doExpDrop": {
                "type": "boolean",
                "description": "死亡時したプレイヤの経験値ドロップをするかどうかです。"
              }
            },
            "required": [
              "target"
            ]
          },
          "gamemode": {
            "properties": {
              "target": {
                "type": "string",
                "description": "ゲームモードを変更するプレイヤーです。",
                "maxLength": 16
              },
              "gamemode": {
                "type": "string",
                "description": "ゲームモードです。",
                "enum": [
                  "survival",
                  "creative",
                  "adventure",
                  "spectator",
                  "SURVIVAL",
                  "CREATIVE",
                  "ADVENTURE",
                  "SPECTATOR"
                ]
              },
              "cause": {
                "type": "string",
                "description": "ゲームモードを変更した原因です。",
                "enum": [
                  "command",
                  "plugin",
                  "default_gamemode",
                  "hardcore_death",
                  "unknown",
                  "COMMAND",
                  "PLUGIN",
                  "DEFAULT_GAMEMODE",
                  "HARDCORE_DEATH",
                  "UNKNOWN"
                ]
              },
              "cancelMessage": {
                "type": "string",
                "description": "ゲームモード変更をキャンセルされたときに表示するメッセージです。PaperMC の改造の一部で、通常は使用しません。"
              }
            },
            "required": [
              "target",
              "gamemode"
            ]
          },
          "hotbar": {
            "properties": {
              "target": {
                "type": "string",
                "description": "ホットバーを変更するプレイヤーです。",
                "maxLength": 16
              },
              "slot": {
                "type": "integer",
                "description": "ホットバーのスロットです。",
                "minimum": 0,
                "maximum": 8
              },
              "previous_slot": {
                "type": "integer",
                "description": "ホットバーのスロットが変更される前のスロットです。",
                "minimum": 0,
                "maximum": 8
              },
              "item": {
                "description": "ホットバーのスロットに入っているアイテムです。",
                "$ref": "#/definitions/itemStack"
              }
            },
            "required": [
              "target",
              "slot"
            ]
          },
          "interact_block": {
            "properties": {
              "target": {
                "type": "string",
                "description": "ブロックをクリックするプレイヤーです。",
                "maxLength": 16
              },
              "action": {
                "type": "string",
                "description": "プレイヤーが行ったアクションです。",
                "enum": [
                  "RIGHT_CLICK_BLOCK",
                  "LEFT_CLICK_BLOCK",
                  "RIGHT_CLICK_AIR",
                  "LEFT_CLICK_AIR",
                  "right_click_block",
                  "left_click_block",
                  "right_click_air",
                  "left_click_air"
                ]
              },
              "block": {
                "description": "プレイヤーがクリックしたブロックです。",
                "$ref": "#/definitions/block"
              },
              "hand": {
                "type": "string",
                "description": "プレイヤーがクリックした手です。",
                "enum": [
                  "HAND",
                  "OFF_HAND",
                  "hand",
                  "off_hand"
                ]
              }
            }
          },
          "launch_projectile": {
            "properties": {
              "type": {
                "type": "string",
                "description": "投げ物の種類です。",
                "enum": [
                  "arrow",
                  "snowball",
                  "egg",
                  "fireball",
                  "small_fireball",
                  "ender_pearl",
                  "wither_skull",
                  "shulker_bullet",
                  "dragon_fireball",
                  "potion",
                  "experience_bottle",
                  "item",
                  "firework",
                  "trident",
                  "ARROW",
                  "SNOWBALL",
                  "EGG",
                  "FIREBALL",
                  "SMALL_FIREBALL",
                  "ENDER_PEARL",
                  "WITHER_SKULL",
                  "SHULKER_BULLET",
                  "DRAGON_FIREBALL",
                  "POTION",
                  "EXPERIENCE_BOTTLE",
                  "ITEM",
                  "FIREWORK",
                  "TRIDENT"
                ]
              },
              "velocity": {
                "description": "投げ物の速度や向きです。",
                "$ref": "#/definitions/vector"
              },
              "epsilon": {
                "description": "投げ物の速度や向きを比較する際に許容する誤差です。",
                "$ref": "#/definitions/vector"
              }
            },
            "required": [
              "type"
            ]
          }
        },
        "server": {
          "log": {
            "properties": {
              "message": {
                "type": "string",
                "description": "対象のログを正規表現で記述します。"
              },
              "level": {
                "type": "string",
                "description": "ログのレベルです。",
                "enum": [
                  "info",
                  "warning",
                  "warn",
                  "error",
                  "config",
                  "debug",
                  "trace",
                  "fatal",
                  "fine",
                  "finer",
                  "finest",
                  "severe",
                  "INFO",
                  "WARNING",
                  "WARN",
                  "ERROR",
                  "CONFIG",
                  "DEBUG",
                  "TRACE",
                  "FATAL",
                  "FINE",
                  "FINER",
                  "FINEST",
                  "SEVERE"
                ]
              },
              "sender": {
                "type": "string",
                "description": "ログを送信したプラグインやロガーの名前です。"
              }
            },
            "required": [
              "message"
            ]
          },
          "plugin_disable": {
            "properties": {
              "plugin": {
                "type": "string",
                "description": "無効化されるプラグインです。"
              }
            },
            "required": [
              "plugin"
            ]
          },
          "plugin_enable": {
            "properties": {
              "plugin": {
                "type": "string",
                "description": "有効化されるプラグインです。"
              }
            },
            "required": [
              "plugin"
            ]
          },
          "command_dispatch": {
            "properties": {
              "command": {
                "type": "string",
                "description": "実行されるコマンドです。実行を検知する場合は正規表現を使用できます。"
              },
              "sender": {
                "type": "string",
                "description": "実行するプレイヤーです。省略した場合はコンソールです。"
              }
            },
            "required": [
              "command"
            ]
          }
        },
        "scenamatica": {
          "message": {
            "properties": {
              "content": {
                "type": "string",
                "description": "メッセージの内容です。",
                "maxLength": 32768
              },
              "recipient": {
                "type": "string",
                "description": "メッセージを受け取るプレイヤーの名前または UUID です。"
              }
            },
            "required": [
              "content",
              "recipient"
            ]
          },
          "milestone": {
            "properties": {
              "name": {
                "type": "string",
                "description": "マイルストーンの名前です。"
              },
              "reached": {
                "type": "boolean",
                "description": "マイルストーンに到達したかどうかです。検証時はこれと比較します。"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      }
    },
    "location": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "description": "X 座標です。"
        },
        "y": {
          "type": "number",
          "description": "Y 座標です。"
        },
        "z": {
          "type": "number",
          "description": "Z 座標です。"
        },
        "yaw": {
          "type": "number",
          "description": "YAW 座標です。"
        },
        "pitch": {
          "type": "number",
          "description": "PITCH 座標です。"
        },
        "world": {
          "type": "string",
          "description": "ワールド名です。",
          "default": "world",
          "pattern": "^[a-zA-Z0-9_]+$"
        }
      },
      "required": [
        "x",
        "y",
        "z"
      ]
    },
    "block": {
      "type": "object",
      "description": "ブロックです。",
      "properties": {
        "type": {
          "type": "string",
          "description": "ブロックの種類です。"
        },
        "x": {
          "type": "number",
          "description": "X 座標です。"
        },
        "y": {
          "type": "number",
          "description": "Y 座標です。"
        },
        "z": {
          "type": "number",
          "description": "Z 座標です。"
        },
        "metadata": {
          "type": "object",
          "description": "ブロックのメタデータです。",
          "additionalProperties": true
        },
        "light": {
          "type": "number",
          "description": "ブロックの明るさです。",
          "minimum": 0,
          "maximum": 15
        },
        "biome": {
          "type": "string",
          "description": "ブロックのバイオームです。",
          "enum": [
            "OCEAN",
            "PLAINS",
            "DESERT",
            "MOUNTAINS",
            "FOREST",
            "TAIGA",
            "SWAMP",
            "RIVER",
            "NETHER_WASTES",
            "THE_END",
            "FROZEN_OCEAN",
            "FROZEN_RIVER",
            "SNOWY_TUNDRA",
            "SNOWY_MOUNTAINS",
            "MUSHROOM_FIELDS",
            "MUSHROOM_FIELD_SHORE",
            "BEACH",
            "DESERT_HILLS",
            "WOODED_HILLS",
            "TAIGA_HILLS",
            "MOUNTAIN_EDGE",
            "JUNGLE",
            "JUNGLE_HILLS",
            "JUNGLE_EDGE",
            "DEEP_OCEAN",
            "STONE_SHORE",
            "SNOWY_BEACH",
            "BIRCH_FOREST",
            "BIRCH_FOREST_HILLS",
            "DARK_FOREST",
            "SNOWY_TAIGA",
            "SNOWY_TAIGA_HILLS",
            "GIANT_TREE_TAIGA",
            "GIANT_TREE_TAIGA_HILLS",
            "WOODED_MOUNTAINS",
            "SAVANNA",
            "SAVANNA_PLATEAU",
            "BADLANDS",
            "WOODED_BADLANDS_PLATEAU",
            "BADLANDS_PLATEAU",
            "SMALL_END_ISLANDS",
            "END_MIDLANDS",
            "END_HIGHLANDS",
            "END_BARRENS",
            "WARM_OCEAN",
            "LUKEWARM_OCEAN",
            "COLD_OCEAN",
            "DEEP_WARM_OCEAN",
            "DEEP_LUKEWARM_OCEAN",
            "DEEP_COLD_OCEAN",
            "DEEP_FROZEN_OCEAN",
            "THE_VOID",
            "SUNFLOWER_PLAINS",
            "DESERT_LAKES",
            "GRAVELLY_MOUNTAINS",
            "FLOWER_FOREST",
            "TAIGA_MOUNTAINS",
            "SWAMP_HILLS",
            "ICE_SPIKES",
            "MODIFIED_JUNGLE",
            "MODIFIED_JUNGLE_EDGE",
            "TALL_BIRCH_FOREST",
            "TALL_BIRCH_HILLS",
            "DARK_FOREST_HILLS",
            "SNOWY_TAIGA_MOUNTAINS",
            "GIANT_SPRUCE_TAIGA",
            "GIANT_SPRUCE_TAIGA_HILLS",
            "MODIFIED_GRAVELLY_MOUNTAINS",
            "SHATTERED_SAVANNA",
            "SHATTERED_SAVANNA_PLATEAU",
            "ERODED_BADLANDS",
            "MODIFIED_WOODED_BADLANDS_PLATEAU",
            "MODIFIED_BADLANDS_PLATEAU",
            "BAMBOO_JUNGLE",
            "BAMBOO_JUNGLE_HILLS",
            "SOUL_SAND_VALLEY",
            "CRIMSON_FOREST",
            "WARPED_FOREST",
            "BASALT_DELTAS",
            "CUSTOM"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "vector": {
      "description": "ベクトルです。",
      "$ref": "#/definitions/location"
    },
    "entity": {
      "type": "object",
      "properties": {
        "location": {
          "$ref": "#/definitions/location",
          "description": "エンティティの位置です。"
        },
        "customName": {
          "type": "string",
          "description": "エンティティのカスタム名です。",
          "maxLength": 16
        },
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "エンティティの UUID です。"
        },
        "glowing": {
          "type": "boolean",
          "description": "エンティティが発光しているかどうかです。"
        },
        "gravity": {
          "type": "boolean",
          "description": "エンティティが重力を受けているかどうかです。"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "エンティティに付与されているスコアボードのタグです。"
        },
        "maxHealth": {
          "type": "number",
          "description": "エンティティの最大体力です。"
        },
        "health": {
          "type": "number",
          "description": "エンティティの体力です。"
        },
        "lastDamage": {
          "type": "object",
          "description": "エンティティが最後に受けたダメージです。",
          "properties": {
            "modifier": {
              "type": "string",
              "description": "ダメージの編集の種類です。",
              "enum": [
                "BASE",
                "HARD_HAT",
                "BLOCKING",
                "ARMOR",
                "RESISTANCE",
                "MAGIC",
                "ABSORPTION"
              ]
            },
            "cause": {
              "type": "string",
              "description": "ダメージの原因です。",
              "enum": [
                "contact",
                "entity_attack",
                "projectile",
                "suffocation",
                "fall",
                "fire",
                "fire_tick",
                "melting",
                "lava",
                "drowning",
                "block_explosion",
                "entity_explosion",
                "void",
                "lightning",
                "suicide",
                "starvation",
                "poison",
                "magic",
                "water",
                "falling_block",
                "thorns",
                "dragon_breath",
                "custom",
                "fly_into_wall",
                "hot_floor",
                "cramming",
                "dryout",
                "CONTACT",
                "ENTITY_ATTACK",
                "PROJECTILE",
                "SUFFOCATION",
                "FALL",
                "FIRE",
                "FIRE_TICK",
                "MELTING",
                "LAVA",
                "DROWNING",
                "BLOCK_EXPLOSION",
                "ENTITY_EXPLOSION",
                "VOID",
                "LIGHTNING",
                "SUICIDE",
                "STARVATION",
                "POISON",
                "MAGIC",
                "WATER",
                "FALLING_BLOCK",
                "THORNS",
                "DRAGON_BREATH",
                "CUSTOM",
                "FLY_INTO_WALL",
                "HOT_FLOOR",
                "CRAMMING",
                "DRYOUT"
              ]
            },
            "amount": {
              "type": "number",
              "description": "ダメージの量です。小数点を含められます。"
            }
          },
          "required": [
            "amount",
            "cause",
            "modifier"
          ]
        },
        "potions": {
          "type": "array",
          "description": "エンティティにかかっているポーション効果を設定します。",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "ポーション効果の種類です。",
                "enum": [
                  "speed",
                  "slow",
                  "fast_digging",
                  "slow_digging",
                  "increase_damage",
                  "heal",
                  "harm",
                  "jump",
                  "confusion",
                  "regeneration",
                  "damage_resistance",
                  "fire_resistance",
                  "water_breathing",
                  "invisibility",
                  "blindness",
                  "night_vision",
                  "hunger",
                  "weakness",
                  "poison",
                  "wither",
                  "health_boost",
                  "absorption",
                  "saturation",
                  "glowing",
                  "levitation",
                  "luck",
                  "unluck",
                  "slow_falling",
                  "conduit_power",
                  "dolphins_grace",
                  "bad_omen",
                  "hero_of_the_village",
                  "SPEED",
                  "SLOW",
                  "FAST_DIGGING",
                  "SLOW_DIGGING",
                  "INCREASE_DAMAGE",
                  "HEAL",
                  "HARM",
                  "JUMP",
                  "CONFUSION",
                  "REGENERATION",
                  "DAMAGE_RESISTANCE",
                  "FIRE_RESISTANCE",
                  "WATER_BREATHING",
                  "INVISIBILITY",
                  "BLINDNESS",
                  "NIGHT_VISION",
                  "HUNGER",
                  "WEAKNESS",
                  "POISON",
                  "WITHER",
                  "HEALTH_BOOST",
                  "ABSORPTION",
                  "SATURATION",
                  "GLOWING",
                  "LEVITATION",
                  "LUCK",
                  "UNLUCK",
                  "SLOW_FALLING",
                  "CONDUIT_POWER",
                  "DOLPHINS_GRACE",
                  "BAD_OMEN",
                  "HERO_OF_THE_VILLAGE"
                ]
              },
              "duration": {
                "type": "number",
                "description": "ポーション効果の持続時間です。"
              },
              "amplifier": {
                "type": "number",
                "description": "ポーション効果の強さです。"
              },
              "ambient": {
                "type": "boolean",
                "description": "ポーション効果がアンビエントかどうかです。"
              },
              "particles": {
                "type": "boolean",
                "description": "ポーション効果がパーティクルを出すかどうかです。"
              },
              "icon": {
                "type": "boolean",
                "description": "ポーション効果のアイコンを表示するかどうかです。"
              }
            }
          }
        }
      }
    },
    "attributeModifier": {
      "type": "object",
      "description": "属性の変更設定を表します。",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "属性の変更設定のUUIDです。"
        },
        "name": {
          "type": "string",
          "description": "属性の変更設定の名前です。"
        },
        "amount": {
          "type": "number",
          "description": "属性の変更設定の量です。"
        },
        "operation": {
          "type": "string",
          "description": "属性の変更設定の操作です。",
          "enum": [
            "add_number",
            "add_scaler",
            "multiply_scalar_1",
            "ADD_NUMBER",
            "ADD_SCALER",
            "MULTIPLY_SCALAR_1"
          ]
        }
      }
    },
    "itemStack": {
      "type": "object",
      "description": "アイテムスタックを表します。",
      "properties": {
        "type": {
          "type": "string",
          "description": "アイテムの種類です。"
        },
        "amount": {
          "type": "integer",
          "description": "アイテムの個数です。省略時は 1 です。"
        },
        "name": {
          "type": "string",
          "description": "アイテムの名前です。 一般に displayName と同じです。"
        },
        "localizedName": {
          "type": "string",
          "description": "アイテムの多言語化された名前です。"
        },
        "lores": {
          "type": "array",
          "description": "アイテムの説明文です。",
          "items": {
            "type": "string"
          }
        },
        "placeables": {
          "type": "array",
          "description": "アイテムの設置可能なブロックです。",
          "items": {
            "$ref": "#/definitions/namespacedKey"
          }
        },
        "destroyables": {
          "type": "array",
          "description": "アイテムの破壊可能なブロックです。",
          "items": {
            "$ref": "#/definitions/namespacedKey"
          }
        },
        "customModel": {
          "type": "integer",
          "description": "アイテムのカスタムモデルデータです。"
        },
        "enchants": {
          "type": "object",
          "description": "アイテムにかかっているエンチャントを設定します。オブジェクトのキーがエンチャントの種類、値がエンチャントのレベル(int)です。",
          "additionalProperties": true
        },
        "flags": {
          "type": "array",
          "description": "アイテムのフラグを設定します。",
          "items": {
            "type": "string",
            "enum": [
              "HIDE_ENCHANTS",
              "HIDE_ATTRIBUTES",
              "HIDE_UNBREAKABLE",
              "HIDE_DESTROYS",
              "HIDE_PLACED_ON",
              "HIDE_POTION_EFFECTS",
              "HIDE_DYE",
              "hide_enchants",
              "hide_attributes",
              "hide_unbreakable",
              "hide_destroys",
              "hide_placed_on",
              "hide_potion_effects",
              "hide_dye"
            ]
          }
        },
        "unbreakable": {
          "type": "boolean",
          "description": "アイテムが耐久無限かどうかです。"
        },
        "attributes": {
          "type": "object",
          "description": "アイテムにかかっている属性を設定します。",
          "patternProperties": {
            "^[a-zA-Z_]+$": {
              "$ref": "#/definitions/attributeModifier"
            }
          }
        },
        "damage": {
          "type": "integer",
          "description": "アイテムの耐久値です。"
        }
      },
      "required": [
        "type"
      ]
    },
    "inventory": {
      "type": "object",
      "description": "インベントリを表します。",
      "properties": {
        "size": {
          "type": "integer",
          "description": "インベントリのサイズです。",
          "default": 36,
          "multipleOf": 9
        },
        "title": {
          "type": "string",
          "description": "インベントリのタイトルです。",
          "maxLength": 32
        },
        "items": {
          "type": "object",
          "description": "インベントリのアイテムです。キーがスロット番号で、値がアイテムスタックです。",
          "patternProperties": {
            "^\\d+$": {
              "$ref": "#/definitions/itemStack"
            }
          }
        }
      }
    },
    "playerInventory": {
      "description": "プレイヤーのインベントリを表します。",
      "properties": {
        "main": {
          "$ref": "#/definitions/inventory",
          "description": "インベントリのメインの部分です。"
        },
        "mainHandItem": {
          "$ref": "#/definitions/itemStack",
          "description": "インベントリのメインハンドのアイテムです。"
        },
        "offHandItem": {
          "$ref": "#/definitions/itemStack",
          "description": "インベントリのオフハンドのアイテムです。"
        },
        "armors": {
          "type": "array",
          "description": "インベントリのアーマーのアイテムです。上から順にヘルメット、チェストプレート、レギンス、ブーツです。どこかが空いている場合は null を格納します。",
          "items": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/definitions/itemStack"
              }
            ]
          },
          "minItems": 4,
          "maxItems": 4
        }
      }
    },
    "actor": {
      "$ref": "#/definitions/entity",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "アクターの名前です。",
          "maxLength": 16
        },
        "displayName": {
          "type": "string",
          "description": "アクターの表示名です。"
        },
        "playerList": {
          "type": "object",
          "description": "アクターのプレイヤーリストにおける扱いです。",
          "properties": {
            "name": {
              "type": "string",
              "description": "プレイヤーリストに表示される名前です。"
            },
            "header": {
              "type": "string",
              "description": "プレイヤーリストに表示されるヘッダーです。"
            },
            "footer": {
              "type": "string",
              "description": "プレイヤーリストに表示されるフッターです。"
            }
          }
        },
        "compass": {
          "$ref": "#/definitions/location",
          "description": "アクターのコンパスのターゲットです。"
        },
        "bedLocation": {
          "$ref": "#/definitions/location",
          "description": "アクターのベッドスポーンの位置です。"
        },
        "exp": {
          "type": "integer",
          "description": "アクターの経験値です。"
        },
        "level": {
          "type": "integer",
          "description": "アクターのレベルです。"
        },
        "totalExp": {
          "type": "integer",
          "description": "アクターの総経験値です。"
        },
        "flyable": {
          "type": "boolean",
          "description": "アクターが飛行できるかどうかです。ゲームモードがクリエイティブおよびスペクテイタの場合は, 暗黙的に true になります。"
        },
        "flying": {
          "type": "boolean",
          "description": "アクターが飛行中かどうかです。"
        },
        "walkSpeed": {
          "type": "number",
          "description": "アクターの歩行速度です。"
        },
        "flySpeed": {
          "type": "number",
          "description": "アクターの飛行速度です。"
        },
        "inventory": {
          "$ref": "#/definitions/playerInventory",
          "description": "アクターのインベントリです。"
        },
        "enderChest": {
          "$ref": "#/definitions/inventory",
          "description": "アクターのエンダーチェストです。"
        },
        "mainHand": {
          "type": "string",
          "description": "アクターの利き手です。",
          "enum": [
            "left",
            "right",
            "LEFT",
            "RIGHT"
          ],
          "default": "right"
        },
        "gamemode": {
          "type": "string",
          "description": "アクターのゲームモードです。",
          "enum": [
            "survival",
            "creative",
            "adventure",
            "spectator",
            "SURVIVAL",
            "CREATIVE",
            "ADVENTURE",
            "SPECTATOR"
          ],
          "default": "survival"
        },
        "foodLevel": {
          "type": "integer",
          "description": "アクターの食料レベルです。",
          "minimum": 0,
          "maximum": 20,
          "default": 20
        },
        "op": {
          "type": [
            "boolean",
            "integer"
          ],
          "minimum": 0,
          "maximum": 4,
          "description": "アクターの OP レベルです。 0 は OP ではないことを意味します。"
        },
        "permissions": {
          "type": "array",
          "description": "アクターに与える権限です。",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "stage": {
      "type": "object",
      "description": "シナリオを実行するステージです。",
      "properties": {
        "copyOf": {
          "type": "string",
          "description": "オリジナルのワールドの名前です。サーバ上に存在するワールドをもとに, 新しくステージを作成します。"
        },
        "type": {
          "type": "string",
          "description": "ステージとして使用するワールドの種類です。",
          "enum": [
            "normal",
            "flat",
            "large_biomes",
            "amplified",
            "NORMAL",
            "FLAT",
            "LARGE_BIOMES",
            "AMPLIFIED"
          ],
          "default": "normal"
        },
        "seed": {
          "type": "number",
          "description": "ステージとして使用するワールドのシードです。"
        },
        "structures": {
          "type": "boolean",
          "description": "ステージとして使用するワールドに構造物を生成するかどうかです。",
          "default": true
        },
        "env": {
          "type": "string",
          "description": "ステージとして使用するワールドの環境です。",
          "enum": [
            "normal",
            "nether",
            "end",
            "custom",
            "NORMAL",
            "NETHER",
            "END",
            "CUSTOM"
          ],
          "default": "normal"
        },
        "hardcore": {
          "type": "boolean",
          "description": "ステージとして使用するワールドがハードコアかどうかです。",
          "default": false
        }
      }
    },
    "trigger": {
      "type": "object",
      "description": "トリガとよばれる, シナリオの実行条件のオブジェクトです。",
      "properties": {
        "type": {
          "type": "string",
          "description": "トリガの種類です。",
          "enum": [
            "manual_dispatch",
            "schedule",
            "on_action",
            "on_load"
          ]
        },
        "before": {
          "$ref": "#/definitions/scenarios",
          "description": "シナリオがこのトリガによって実行される場合, 本シナリオの実行前に実行するシナリオを定義します。"
        },
        "after": {
          "$ref": "#/definitions/scenarios",
          "description": "シナリオがこのトリガによって実行される場合, 本シナリオの実行後に実行するシナリオを定義します。"
        },
        "runif": {
          "type": "object",
          "description": "シナリオの実行条件を定義します。アクションで定義します。満たしていない場合はスキップされます。",
          "$ref": "#/definitions/action"
        }
      },
      "required": [
        "type"
      ],
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "on_action"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/action"
          }
        }
      ]
    }
  },
  "properties": {
    "scenamatica": {
      "$ref": "#/definitions/version",
      "description": "対応する Scenamatica のバージョンです。動作している Scenamatica のバージョンよりも新しいバージョンのシナリオファイルは読み込めません。"
    },
    "name": {
      "type": "string",
      "description": "シナリオにつける一意の識別子です。キャメルケースが推奨されていますが、特に技術的制約はありません。",
      "pattern": "^[\\w-_]+$",
      "examples": [
        "myScenario"
      ]
    },
    "description": {
      "type": "string",
      "description": "人間が読みやすいシナリオの説明です。シナリオの概要を記述してください。",
      "examples": [
        "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
      ]
    },
    "timeout": {
      "type": "integer",
      "description": "全体のタイムアウト時間を**チック**で指定します。-1 で無効化します。",
      "minimum": -1,
      "default": 6000
    },
    "on": {
      "type": "array",
      "description": "シナリオの実行条件を定義します。シナリオは, この配列の要素のいずれかに一致するときに実行されます。何も指定しない場合、そのシナリオは一生実行されません。",
      "items": {
        "$ref": "#/definitions/trigger"
      },
      "minItems": 1
    },
    "context": {
      "type": "object",
      "description": "シナリオの実行に必要な情報や準備を定義します。シナリオの実行に必要な情報や準備がない場合、このプロパティは省略できます。",
      "properties": {
        "actors": {
          "type": "array",
          "description": "シナリオの実行に必要なアクターを定義します。必要なアクターは, 適宜自動生成されます。",
          "items": {
            "$ref": "#/definitions/actor"
          }
        },
        "stage": {
          "$ref": "#/definitions/stage",
          "description": "シナリオの実行に必要なステージを定義します。ステージが指定されている場合, シナリオ開始時に自動的に生成されます。"
        }
      },
      "additionalProperties": false
    },
    "runif": {
      "type": "object",
      "description": "シナリオの実行条件を定義します。アクションで定義します。満たしていない場合はスキップされます。",
      "$ref": "#/definitions/action"
    },
    "scenario": {
      "$ref": "#/definitions/scenarios",
      "description": "このシナリオファイルの本シナリオを定義します。",
      "minItems": 1
    }
  },
  "required": [
    "scenamatica",
    "name",
    "on",
    "scenario"
  ],
  "additionalProperties": true
}
