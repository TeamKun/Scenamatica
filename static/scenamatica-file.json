{
  "title": "Scenamatica Scenario File",
  "type": "object",
  "properties": {
    "scenamatica": {
      "$ref": "#/definitions/version",
      "description": "対応する Scenamatica のバージョンです。動作している Scenamatica のバージョンよりも新しいバージョンのシナリオファイルは読み込めません。"
    },
    "name": {
      "type": "string",
      "description": "シナリオにつける一意の識別子です。キャメルケースが推奨されていますが、特に技術的制約はありません。",
      "pattern": "^[\\w-_]+$",
      "examples": [
        "myScenario"
      ]
    },
    "description": {
      "type": "string",
      "description": "人間が読みやすいシナリオの説明です。シナリオの概要を記述してください。",
      "examples": [
        "あのイーハトーヴォのすきとおった風、夏でも底に冷たさをもつ青いそら、うつくしい森で飾られたモーリオ市、郊外のぎらぎらひかる草の波。"
      ]
    },
    "definitions": {
      "type": "object",
      "description": "シナリオ内で再利用できる定義を作成します。",
      "additionalProperties": true
    },
    "timeout": {
      "type": "integer",
      "description": "全体のタイムアウト時間を**チック**で指定します。-1 で無効化します。",
      "minimum": -1,
      "default": 6000
    },
    "order": {
      "type": "integer",
      "description": "シナリオの実行順序を指定します。小さいほど先に実行されます。",
      "default": 2147483647
    },
    "on": {
      "type": "array",
      "description": "シナリオの実行条件を定義します。シナリオは, この配列の要素のいずれかに一致するときに実行されます。何も指定しない場合、そのシナリオは一生実行されません。",
      "items": {
        "$ref": "#/definitions/trigger"
      },
      "minItems": 1
    },
    "context": {
      "type": "object",
      "description": "シナリオの実行に必要な情報や準備を定義します。シナリオの実行に必要な情報や準備がない場合、このプロパティは省略できます。",
      "properties": {
        "actors": {
          "type": "array",
          "description": "シナリオの実行に必要なアクターを定義します。必要なアクターは, 適宜自動生成されます。",
          "items": {
            "$ref": "#/definitions/actor"
          }
        },
        "stage": {
          "$ref": "#/definitions/stage",
          "description": "シナリオの実行に必要なステージを定義します。ステージが指定されている場合, シナリオ開始時に自動的に生成されます。"
        }
      },
      "additionalProperties": false
    },
    "runif": {
      "type": "object",
      "description": "シナリオの実行条件を定義します。アクションで定義します。満たしていない場合はスキップされます。",
      "$ref": "#/definitions/action"
    },
    "scenario": {
      "$ref": "#/definitions/scenarios",
      "description": "このシナリオファイルの本シナリオを定義します。",
      "minItems": 1
    }
  },
  "required": [
    "scenamatica",
    "name",
    "on",
    "scenario"
  ],
  "additionalProperties": true,
  "definitions": {
    "version": {
      "type": "string",
      "pattern": "^v?(?<major>[0-9]\\d*)\\.(?<minor>0|[1-9]\\d*)(\\.(?<patch>0|[1-9]\\d*))?(-(?<preRelease>(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(?<buildMetadata>[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
      "examples": [
        "v3.0.0",
        "3.0.0-alpha.1",
        "v3.0.0-alpha.1+build.1",
        "3.0.0+build.1",
        "v3.0.0+build.1.2.b8f12d7",
        "3.0.0-beta.2",
        "v3.0.0-beta.11",
        "3.0.0-rc.1",
        "v3.0.0-rc.1+build.1",
        "3.0.0-rc.1+build.1.2.b8f12d7"
      ]
    },
    "namespacedKey": {
      "type": "string",
      "pattern": "^([a-z0-9_/]+:)?[a-z0-9_/]+$",
      "description": "名前空間付きキーです。 名前空間を指定しない場合は, minecraft: が暗黙的に指定されます。",
      "examples": [
        "minecraft:stone",
        "stone"
      ]
    },
    "entity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "エンティティの種類です。"
        },
        "location": {
          "$ref": "#/definitions/location",
          "description": "エンティティの位置です。"
        },
        "velocity": {
          "$ref": "#/definitions/vector",
          "description": "エンティティの速度です。"
        },
        "customName": {
          "type": "string",
          "description": "エンティティのカスタム名です。",
          "maxLength": 16
        },
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "エンティティの UUID です。"
        },
        "glowing": {
          "type": "boolean",
          "description": "エンティティが発光しているかどうかです。"
        },
        "gravity": {
          "type": "boolean",
          "description": "エンティティが重力を受けているかどうかです。"
        },
        "silent": {
          "type": "boolean",
          "description": "エンティティが音を発するかどうかです。"
        },
        "customNameVisible": {
          "type": "boolean",
          "description": "エンティティのカスタム名が表示されるかどうかです。"
        },
        "invulnerable": {
          "type": "boolean",
          "description": "エンティティが無敵かどうかです。"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "エンティティに付与されているスコアボードのタグです。"
        },
        "lastDamage": {
          "type": "object",
          "description": "エンティティが最後に受けたダメージです。",
          "properties": {
            "modifier": {
              "type": "string",
              "description": "ダメージの編集の種類です。",
              "enum": [
                "BASE",
                "HARD_HAT",
                "BLOCKING",
                "ARMOR",
                "RESISTANCE",
                "MAGIC",
                "ABSORPTION"
              ]
            },
            "cause": {
              "type": "string",
              "description": "ダメージの原因です。",
              "enum": [
                "contact",
                "entity_attack",
                "projectile",
                "suffocation",
                "fall",
                "fire",
                "fire_tick",
                "melting",
                "lava",
                "drowning",
                "block_explosion",
                "entity_explosion",
                "void",
                "lightning",
                "suicide",
                "starvation",
                "poison",
                "magic",
                "water",
                "falling_block",
                "thorns",
                "dragon_breath",
                "custom",
                "fly_into_wall",
                "hot_floor",
                "cramming",
                "dryout",
                "CONTACT",
                "ENTITY_ATTACK",
                "PROJECTILE",
                "SUFFOCATION",
                "FALL",
                "FIRE",
                "FIRE_TICK",
                "MELTING",
                "LAVA",
                "DROWNING",
                "BLOCK_EXPLOSION",
                "ENTITY_EXPLOSION",
                "VOID",
                "LIGHTNING",
                "SUICIDE",
                "STARVATION",
                "POISON",
                "MAGIC",
                "WATER",
                "FALLING_BLOCK",
                "THORNS",
                "DRAGON_BREATH",
                "CUSTOM",
                "FLY_INTO_WALL",
                "HOT_FLOOR",
                "CRAMMING",
                "DRYOUT"
              ]
            },
            "amount": {
              "type": "number",
              "description": "ダメージの量です。小数点を含められます。"
            }
          },
          "required": [
            "amount",
            "cause",
            "modifier"
          ]
        },
        "maxHealth": {
          "type": "number",
          "description": "エンティティの最大体力です。"
        },
        "health": {
          "type": "number",
          "description": "エンティティの体力です。"
        },
        "potions": {
          "type": "array",
          "description": "エンティティにかかっているポーション効果を設定します。",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "ポーション効果の種類です。",
                "enum": [
                  "speed",
                  "slow",
                  "fast_digging",
                  "slow_digging",
                  "increase_damage",
                  "heal",
                  "harm",
                  "jump",
                  "confusion",
                  "regeneration",
                  "damage_resistance",
                  "fire_resistance",
                  "water_breathing",
                  "invisibility",
                  "blindness",
                  "night_vision",
                  "hunger",
                  "weakness",
                  "poison",
                  "wither",
                  "health_boost",
                  "absorption",
                  "saturation",
                  "glowing",
                  "levitation",
                  "luck",
                  "unluck",
                  "slow_falling",
                  "conduit_power",
                  "dolphins_grace",
                  "bad_omen",
                  "hero_of_the_village",
                  "SPEED",
                  "SLOW",
                  "FAST_DIGGING",
                  "SLOW_DIGGING",
                  "INCREASE_DAMAGE",
                  "HEAL",
                  "HARM",
                  "JUMP",
                  "CONFUSION",
                  "REGENERATION",
                  "DAMAGE_RESISTANCE",
                  "FIRE_RESISTANCE",
                  "WATER_BREATHING",
                  "INVISIBILITY",
                  "BLINDNESS",
                  "NIGHT_VISION",
                  "HUNGER",
                  "WEAKNESS",
                  "POISON",
                  "WITHER",
                  "HEALTH_BOOST",
                  "ABSORPTION",
                  "SATURATION",
                  "GLOWING",
                  "LEVITATION",
                  "LUCK",
                  "UNLUCK",
                  "SLOW_FALLING",
                  "CONDUIT_POWER",
                  "DOLPHINS_GRACE",
                  "BAD_OMEN",
                  "HERO_OF_THE_VILLAGE"
                ]
              },
              "duration": {
                "type": "number",
                "description": "ポーション効果の持続時間です。"
              },
              "amplifier": {
                "type": "number",
                "description": "ポーション効果の強さです。"
              },
              "ambient": {
                "type": "boolean",
                "description": "ポーション効果がアンビエントかどうかです。"
              },
              "particles": {
                "type": "boolean",
                "description": "ポーション効果がパーティクルを出すかどうかです。"
              },
              "icon": {
                "type": "boolean",
                "description": "ポーション効果のアイコンを表示するかどうかです。"
              }
            }
          }
        },
        "fireTicks": {
          "type": "number",
          "description": "エンティティが燃えている時間です。"
        },
        "ticksLived": {
          "type": "number",
          "description": "エンティティが生きている時間です。"
        },
        "portalCooldown": {
          "type": "number",
          "description": "エンティティがポータルに入れるようになるまでの時間です。"
        },
        "persistent": {
          "type": "boolean",
          "description": "エンティティが永続的かどうかです。"
        },
        "fallDistance": {
          "type": "number",
          "description": "エンティティが落下した距離です。"
        }
      }
    },
    "inventory": {
      "type": "object",
      "description": "インベントリを表します。",
      "properties": {
        "size": {
          "type": "integer",
          "description": "インベントリのサイズです。",
          "default": 36,
          "multipleOf": 9
        },
        "title": {
          "type": "string",
          "description": "インベントリのタイトルです。",
          "maxLength": 32
        },
        "items": {
          "type": "object",
          "description": "インベントリのアイテムです。キーがスロット番号で、値がアイテムスタックです。",
          "patternProperties": {
            "^\\d+$": {
              "$ref": "#/definitions/itemStack"
            }
          }
        }
      }
    },
    "entityItem": {
      "type": "object",
      "description": "アイテムのエンティティを表します。",
      "$ref": "#/definitions/entity",
      "$comment": "多重継承はできないので、 itemStack のプロパティをそっくりそのままコピーします。",
      "properties": {
        "pickupDelay": {
          "type": "number",
          "description": "アイテムを拾えるようになるまでの時間です。"
        },
        "owner": {
          "type": "string",
          "format": "uuid",
          "description": "アイテムの所有者のUUIDです。"
        },
        "thrower": {
          "type": "string",
          "format": "uuid",
          "description": "アイテムを投げたプレイヤーのUUIDです。"
        },
        "canMobPickup": {
          "type": "boolean",
          "description": "モブがアイテムを拾えるかどうかです。"
        },
        "canPlayerPickup": {
          "type": "boolean",
          "description": "プレイヤーがアイテムを拾えるかどうかです。"
        },
        "type": {
          "type": "string",
          "description": "アイテムの種類です。"
        },
        "amount": {
          "type": "integer",
          "description": "アイテムの個数です。省略時は 1 です。"
        },
        "name": {
          "type": "string",
          "description": "アイテムの名前です。 一般に displayName と同じです。"
        },
        "localizedName": {
          "type": "string",
          "description": "アイテムの多言語化された名前です。"
        },
        "lores": {
          "type": "array",
          "description": "アイテムの説明文です。",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "attributeModifier": {
      "type": "object",
      "description": "属性の変更設定を表します。",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "属性の変更設定のUUIDです。"
        },
        "name": {
          "type": "string",
          "description": "属性の変更設定の名前です。"
        },
        "amount": {
          "type": "number",
          "description": "属性の変更設定の量です。"
        },
        "operation": {
          "type": "string",
          "description": "属性の変更設定の操作です。",
          "enum": [
            "add_number",
            "add_scalar",
            "multiply_scalar_1",
            "ADD_NUMBER",
            "ADD_SCALAR",
            "MULTIPLY_SCALAR_1"
          ]
        }
      }
    },
    "itemStack": {
      "type": "object",
      "description": "アイテムスタックを表します。",
      "properties": {
        "type": {
          "type": "string",
          "description": "アイテムの種類です。"
        },
        "amount": {
          "type": "integer",
          "description": "アイテムの個数です。省略時は 1 です。"
        },
        "name": {
          "type": "string",
          "description": "アイテムの名前です。 一般に displayName と同じです。"
        },
        "localizedName": {
          "type": "string",
          "description": "アイテムの多言語化された名前です。"
        },
        "lores": {
          "type": "array",
          "description": "アイテムの説明文です。",
          "items": {
            "type": "string"
          }
        },
        "placeables": {
          "type": "array",
          "description": "アイテムの設置可能なブロックです。",
          "items": {
            "$ref": "#/definitions/namespacedKey"
          }
        },
        "destroyables": {
          "type": "array",
          "description": "アイテムの破壊可能なブロックです。",
          "items": {
            "$ref": "#/definitions/namespacedKey"
          }
        },
        "customModel": {
          "type": "integer",
          "description": "アイテムのカスタムモデルデータです。"
        },
        "enchants": {
          "type": "object",
          "description": "アイテムにかかっているエンチャントを設定します。オブジェクトのキーがエンチャントの種類、値がエンチャントのレベル(int)です。",
          "additionalProperties": true
        },
        "flags": {
          "type": "array",
          "description": "アイテムのフラグを設定します。",
          "items": {
            "type": "string",
            "enum": [
              "HIDE_ENCHANTS",
              "HIDE_ATTRIBUTES",
              "HIDE_UNBREAKABLE",
              "HIDE_DESTROYS",
              "HIDE_PLACED_ON",
              "HIDE_POTION_EFFECTS",
              "HIDE_DYE",
              "hide_enchants",
              "hide_attributes",
              "hide_unbreakable",
              "hide_destroys",
              "hide_placed_on",
              "hide_potion_effects",
              "hide_dye"
            ]
          }
        },
        "unbreakable": {
          "type": "boolean",
          "description": "アイテムが耐久無限かどうかです。"
        },
        "attributes": {
          "type": "object",
          "description": "アイテムにかかっている属性を設定します。",
          "patternProperties": {
            "^[a-zA-Z_]+$": {
              "$ref": "#/definitions/attributeModifier"
            }
          }
        },
        "damage": {
          "type": "integer",
          "description": "アイテムの耐久値です。"
        }
      },
      "required": [
        "type"
      ]
    },
    "itemSlot": {
      "type": "string",
      "enum": [
        "HAND",
        "OFF_HAND",
        "FEET",
        "LEGS",
        "CHEST",
        "HEAD",
        "hand",
        "off_hand",
        "feet",
        "legs",
        "chest",
        "head"
      ]
    },
    "playerInventory": {
      "description": "プレイヤーのインベントリを表します。",
      "properties": {
        "main": {
          "$ref": "#/definitions/inventory",
          "description": "インベントリのメインの部分です。"
        },
        "mainHandItem": {
          "$ref": "#/definitions/itemStack",
          "description": "インベントリのメインハンドのアイテムです。"
        },
        "offHandItem": {
          "$ref": "#/definitions/itemStack",
          "description": "インベントリのオフハンドのアイテムです。"
        },
        "armors": {
          "type": "array",
          "description": "インベントリのアーマーのアイテムです。上から順にヘルメット、チェストプレート、レギンス、ブーツです。どこかが空いている場合は null を格納します。",
          "items": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/definitions/itemStack"
              }
            ]
          },
          "minItems": 4,
          "maxItems": 4
        }
      }
    },
    "teleportCause": {
      "type": "string",
      "enum": [
        "COMMAND",
        "DEATH",
        "END_PORTAL",
        "END_GATEWAY",
        "CHORUS_FRUIT",
        "SPECTATE",
        "NETHER_PORTAL",
        "ENDER_PEARL",
        "UNKNOWN"
      ]
    },
    "scenario": {
      "type": "object",
      "$ref": "#/definitions/action",
      "properties": {
        "type": {
          "type": "string",
          "description": "シナリオの種類です。",
          "oneOf": [
            {
              "const": "expect",
              "description": "アクションがプラグインによって実行されるか監視します。"
            },
            {
              "const": "execute",
              "description": "アクションを実行します。"
            },
            {
              "const": "require",
              "description": "条件が満たされているかチェックします。"
            }
          ]
        },
        "timeout": {
          "type": "integer",
          "description": "シナリオのタイムアウト時間を**チック**で指定します。-1 で無効化します。",
          "minimum": -1,
          "default": 100
        },
        "runif": {
          "type": "object",
          "description": "シナリオの実行条件を定義します。アクションで定義します。満たしていない場合はスキップされます。",
          "$ref": "#/definitions/action"
        }
      },
      "required": [
        "type",
        "action"
      ]
    },
    "action": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "description": "アクションの種類です。 ",
          "enum": [
            "block_break",
            "block_place",
            "entity_damage_by_entity",
            "entity_damage",
            "entity_death",
            "entity_drop_item",
            "entity",
            "entity_move",
            "entity_pickup_item",
            "entity_place",
            "entity_spawn",
            "inventory_close",
            "inventory_click",
            "inventory_creative",
            "inventory_open",
            "player_advancement",
            "player_animation",
            "player_chat",
            "player_death",
            "player_drop_item",
            "player_flight",
            "player_gamemode",
            "player_hotbar",
            "player_interact_block",
            "player_item_break",
            "player_item_consume",
            "player_join",
            "player_kick",
            "player_move",
            "player_projectile_launch",
            "player_quit",
            "player_respawn",
            "player_sneak",
            "player_sprint",
            "player_teleport",
            "message",
            "milestone",
            "negate",
            "broadcast",
            "command_dispatch",
            "server_log",
            "server_plugin_disable",
            "server_plugin_enable",
            "tab_complete",
            "whitelist_toggle",
            "world_border_changed",
            "world_border",
            "world_game_rule",
            "world_init",
            "world_load",
            "world_save",
            "world_unload"
          ]
        },
        "with": {
          "type": "object",
          "description": "アクションの種類によっては, このプロパティにアクションの引数を指定します。"
        }
      },
      "required": [
        "action"
      ],
      "allOf": [
        {
          "if": {
            "properties": {
              "action": {
                "const": "block_break",
                "description": "ブロックの破壊を検知します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/block_break"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "block_place",
                "description": "ブロックの設置を検知します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/block_place"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "entity_damage_by_entity",
                "description": "エンティティ"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/entity_damage_by_entity"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "entity_damage",
                "description": "エンティティにダメージを与えます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/entity_damage"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "entity_death",
                "description": "エンティティをキルします。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/entity_death"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "entity_drop_item",
                "description": "エンティティにアイテムをドロップさせます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/entity_drop_item"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "entity",
                "description": "エンティティの状態を変更します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/entity"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "entity_move",
                "description": "エンティティを移動させます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/entity_move"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "entity_pickup_item",
                "description": "エンティティにアイテムを拾わせます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/entity_pickup_item"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "entity_place",
                "description": "エンティティの設置を検知します"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/entity_place"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "entity_spawn",
                "description": "エンティティをスポーンさせます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/entity_spawn"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "inventory_close",
                "description": "インベントリを閉じます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/inventory_close"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "inventory_click",
                "description": "インベントリのクリックを検知します"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/inventory_click"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "inventory_creative",
                "description": "クリエイティブインベントリのアイテムをクリックしたときに実行されます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/inventory_creative"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "inventory_open",
                "description": "インベントリを閉きます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/inventory_open"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_advancement",
                "description": "プレイヤに進捗を達成させます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player_advancement"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_animation",
                "description": "プレイヤのアニメーションを再生します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player_animation"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_chat",
                "description": "プレイヤにチャットをさせます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player_chat"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_death",
                "description": "プレイヤをキルします。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player_death"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_drop_item",
                "description": "プレイヤにアイテムをドロップさせます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player_drop_item"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_flight",
                "description": "プレイヤを飛行させます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player_flight"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_gamemode",
                "description": "プレイヤのゲームモードを変更します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player_gamemode"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_hotbar",
                "description": "プレイヤのホットバーのアイテムを変更します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player_hotbar"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_interact_block",
                "description": "プレイヤにブロックを操作させます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player_interact_block"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_item_break",
                "description": "プレイヤにアイテムを破壊させます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player_item_break"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_item_consume",
                "description": "プレイヤ"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player_item_consume"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_join",
                "description": "プレイヤをサーバに参加させます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player_join"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_kick",
                "description": "プレイヤをサーバから強制退出させます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player_kick"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_move",
                "description": "プレイヤを移動させます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player_move"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_projectile_launch",
                "description": "プレイヤに投げ物を射出させます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player_projectile_launch"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_quit",
                "description": "プレイヤをサーバから退出させます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player_quit"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_respawn",
                "description": "プレイヤをリスポーンさせます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player_respawn"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_sneak",
                "description": "プレイヤをしゃがませます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player_sneak"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_sprint",
                "description": "プレイヤを走らせます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player_sprint"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "player_teleport",
                "description": "プレイヤをてレポートさせます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/player_teleport"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "message",
                "description": "プレイヤにメッセージを送信します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/message"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "milestone",
                "description": "マイルストーンを達成します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/milestone"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "broadcast",
                "description": "サーバにブロードキャストメッセージを送信します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/broadcast"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "command_dispatch",
                "description": "コマンドを実行します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/command_dispatch"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "server_log",
                "description": "サーバにログを送信します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/server_log"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "server_plugin_disable",
                "description": "サーバのプラグインを無効化します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/server_plugin_disable"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "server_plugin_enable",
                "description": "サーバのプラグインを有効化します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/server_plugin_enable"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "tab_complete",
                "description": "コマンドをタブ補完します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/tab_complete"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "whitelist_toggle",
                "description": "サーバのホワイトリストを切り替えます。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/whitelist_toggle"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "world_border_changed",
                "description": "ワールドボーダの変更の完了を検知します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/world_border_changed"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "world_border",
                "description": "ワールドのボーダを変更します。"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/world_border"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "world_game_rule",
                "description": "ワールドのゲームルールを設定します"
              }
            }
          },
          "then": {
            "properties": {
              "with": {
                "$ref": "#/definitions/action/definitions/world_game_rule"
              }
            }
          }
        }
      ],
      "definitions": {
        "block_$base": {
          "type": "object",
          "properties": {
            "block": {
              "description": "対象のブロックです。",
              "$ref": "#/definitions/block"
            }
          }
        },
        "block_break": {
          "type": "object",
          "description": "ブロックの破壊を検知します。",
          "properties": {
            "actor": {
              "type": "string",
              "description": "ブロックを破壊したアクタの名前です。",
              "maxLength": 16
            },
            "dropItems": {
              "type": "boolean",
              "description": "ブロックがドロップするアイテムをドロップするかどうかです。"
            }
          },
          "$ref": "#/definitions/action/definitions/block_$base"
        },
        "block_place": {
          "type": "object",
          "description": "ブロックの設置を検知します。",
          "properties": {
            "actor": {
              "type": "string",
              "description": "ブロックを破壊したアクタの名前です。",
              "maxLength": 16
            },
            "hand": {
              "type": "string",
              "description": "ブロックを設置した手です。",
              "enum": [
                "HAND",
                "OFF_HAND",
                "hand",
                "off_hand"
              ]
            },
            "direction": {
              "type": "string",
              "description": "ブロックを設置する方向です。",
              "enum": [
                "UP",
                "DOWN",
                "NORTH",
                "SOUTH",
                "WEST",
                "EAST",
                "up",
                "down",
                "north",
                "south",
                "west",
                "east"
              ]
            }
          },
          "$ref": "#/definitions/action/definitions/block_$base"
        },
        "entity_$base": {
          "type": "object",
          "properties": {
            "target": {
              "description": "対象のエンティティです。",
              "oneOf": [
                {
                  "type": "string",
                  "description": "エンティティの UUID またはセレクタです。"
                },
                {
                  "$ref": "#/definitions/entity"
                }
              ]
            }
          }
        },
        "entity_damage_by_entity": {
          "type": "object",
          "description": "エンティティ",
          "properties": {
            "damager": {
              "description": "ダメージ元のエンティティのUUIDまたはセレクタです。",
              "type": "string"
            }
          },
          "$ref": "#/definitions/action/definitions/entity_damage"
        },
        "entity_damage": {
          "type": "object",
          "description": "エンティティにダメージを与えます。",
          "properties": {
            "cause": {
              "type": "string",
              "description": "ダメージの種類です。",
              "enum": [
                "CONTACT",
                "ENTITY_ATTACK",
                "ENTITY_SWEEP_ATTACK",
                "PROJECTILE",
                "SUFFOCATION",
                "FALL",
                "FIRE",
                "FIRE_TICK",
                "MELTING",
                "LAVA",
                "DROWNING",
                "BLOCK_EXPLOSION",
                "ENTITY_EXPLOSION",
                "VOID",
                "LIGHTNING",
                "SUICIDE",
                "STARVATION",
                "POTION",
                "MAGIC",
                "WITHER",
                "FALLING_BLOCK",
                "THORNS",
                "DRAGON_BREATH",
                "CUSTOM",
                "FLY_INTO_WALL",
                "HOT_FLOOR",
                "CRAMMING",
                "DRYOUT",
                "contact",
                "entity_attack",
                "entity_sweep_attack",
                "projectile",
                "suffocation",
                "fall",
                "fire",
                "fire_tick",
                "melting",
                "lava",
                "drowning",
                "block_explosion",
                "entity_explosion",
                "void",
                "lightning",
                "suicide",
                "starvation",
                "potion",
                "magic",
                "wither",
                "falling_block",
                "thorns",
                "dragon_breath",
                "custom",
                "fly_into_wall",
                "hot_floor",
                "cramming",
                "dryout"
              ]
            },
            "amount": {
              "type": "number",
              "description": "与えるダメージの量(float)です。",
              "min": 0
            },
            "modifiers": {
              "type": "object",
              "patternProperties": {
                "^\\w+$": {
                  "type": "number",
                  "min": 0
                }
              }
            }
          },
          "$ref": "#/definitions/action/definitions/entity_$base"
        },
        "entity_death": {
          "type": "object",
          "description": "エンティティをキルします。",
          "properties": {
            "drops": {
              "description": "ドロップするアイテムです。",
              "type": "array",
              "items": {
                "$ref": "#/definitions/itemStack"
              }
            },
            "dropExp": {
              "description": "ドロップする経験値です。",
              "type": "integer",
              "min": 0
            },
            "reviveHealth": {
              "description": "復活時の体力です。",
              "type": "number",
              "min": 0
            },
            "playDeathSound": {
              "description": "死亡時のサウンドを再生するかどうかです。",
              "type": "boolean"
            },
            "sound": {
              "description": "再生するサウンドです。",
              "$ref": "#/definitions/sound"
            },
            "soundCategory": {
              "description": "サウンドのカテゴリです。",
              "type": "string",
              "enum": [
                "MASTER",
                "MUSIC",
                "RECORD",
                "WEATHER",
                "BLOCK",
                "HOSTILE",
                "NEUTRAL",
                "PLAYER",
                "AMBIENT",
                "VOICE",
                "master",
                "music",
                "record",
                "weather",
                "block",
                "hostile",
                "neutral",
                "player",
                "ambient",
                "voice"
              ]
            },
            "soundVolume": {
              "description": "サウンドの音量です。",
              "type": "number",
              "min": 0
            },
            "soundPitch": {
              "description": "サウンドのピッチです。",
              "type": "number",
              "min": 0
            }
          },
          "$ref": "#/definitions/action/definitions/entity_$base"
        },
        "entity_drop_item": {
          "type": "object",
          "description": "エンティティにアイテムをドロップさせます。",
          "properties": {
            "item": {
              "description": "ドロップするアイテムです。",
              "$ref": "#/definitions/entityItem"
            }
          },
          "$ref": "#/definitions/action/definitions/entity_$base"
        },
        "entity": {
          "type": "object",
          "description": "エンティティの状態を変更します。",
          "properties": {
            "entity": {
              "$ref": "#/definitions/entity",
              "description": "変更する値です。"
            }
          },
          "$ref": "#/definitions/action/definitions/entity_$base"
        },
        "entity_move": {
          "type": "object",
          "description": "エンティティを移動させます。",
          "properties": {
            "from": {
              "$ref": "#/definitions/location",
              "description": "移動元の座標を指定します。"
            },
            "to": {
              "$ref": "#/definitions/location",
              "description": "移動先の座標を指定します。"
            },
            "ai": {
              "type": "boolean",
              "description": "AI を有効にするかどうかを指定します。",
              "default": true
            }
          },
          "$ref": "#/definitions/action/definitions/entity_$base"
        },
        "entity_pickup_item": {
          "type": "object",
          "description": "エンティティにアイテムを拾わせます。",
          "properties": {
            "remaining": {
              "type": "number",
              "description": "残りのアイテム数を指定します。"
            },
            "item": {
              "description": "拾わせるアイテムを指定します。",
              "oneOf": [
                {
                  "$ref": "#/definitions/entityItem",
                  "description": "アイテムを指定します。"
                },
                {
                  "type": "string",
                  "description": "アイテムのセレクタを指定します。"
                }
              ]
            }
          },
          "$ref": "#/definitions/action/definitions/entity_$base"
        },
        "entity_place": {
          "type": "object",
          "description": "エンティティの設置を検知します",
          "properties": {
            "target": {
              "description": "設置するエンティティの UUID, セレクタ, 実体, または Material です。"
            },
            "player": {
              "description": "設置するプレイヤーの名前または UUID です。",
              "type": "string"
            },
            "block": {
              "description": "設置場所のブロックです。",
              "$ref": "#/definitions/block"
            },
            "direction": {
              "description": "設置する方向です。",
              "type": "string",
              "enum": [
                "UP",
                "DOWN",
                "NORTH",
                "SOUTH",
                "WEST",
                "EAST",
                "up",
                "down",
                "north",
                "south",
                "west",
                "east"
              ]
            }
          },
          "$ref": "#/definitions/action/definitions/entity_damage"
        },
        "entity_spawn": {
          "type": "object",
          "description": "エンティティをスポーンさせます。",
          "properties": {
            "entity": {
              "$ref": "#/definitions/entity"
            }
          },
          "$ref": "#/definitions/action/definitions/entity_$base"
        },
        "inventory_$base": {
          "type": "object",
          "properties": {
            "inventory": {
              "description": "対象のインベントリです。",
              "$ref": "#/definitions/inventory"
            }
          },
          "definitions": {
            "clickType": {
              "type": "string",
              "description": "クリックの種類です。",
              "enum": [
                "LEFT",
                "SHIFT_LEFT",
                "RIGHT",
                "SHIFT_RIGHT",
                "WINDOW_BORDER_LEFT",
                "WINDOW_BORDER_RIGHT",
                "MIDDLE",
                "NUMBER_KEY",
                "DOUBLE_CLICK",
                "DROP",
                "CONTROL_DROP",
                "CREATIVE",
                "SWAP_OFFHAND",
                "UNKNOWN",
                "left",
                "shift_left",
                "right",
                "shift_right",
                "window_border_left",
                "window_border_right",
                "middle",
                "number_key",
                "double_click",
                "drop",
                "control_drop",
                "creative",
                "swap_offhand",
                "unknown"
              ]
            },
            "inventoryAction": {
              "type": "string",
              "description": "インベントリのアクションです。",
              "enum": [
                "NOTHING",
                "PICKUP_ALL",
                "PICKUP_SOME",
                "PICKUP_HALF",
                "PICKUP_ONE",
                "PLACE_ALL",
                "PLACE_SOME",
                "PLACE_ONE",
                "SWAP_WITH_CURSOR",
                "DROP_ALL_CURSOR",
                "DROP_ONE_CURSOR",
                "DROP_ALL_SLOT",
                "DROP_ONE_SLOT",
                "MOVE_TO_OTHER_INVENTORY",
                "HOTBAR_MOVE_AND_REA",
                "HOTBAR_SWAP",
                "CLONE_STACK",
                "COLLECT_TO_CURSOR",
                "UNKNOWN",
                "nothing",
                "pickup_all",
                "pickup_some",
                "pickup_half",
                "pickup_one",
                "place_all",
                "place_some",
                "place_one",
                "swap_with_cursor",
                "drop_all_cursor",
                "drop_one_cursor",
                "drop_all_slot",
                "drop_one_slot",
                "move_to_other_inventory",
                "hotbar_move_and_readd",
                "hotbar_swap",
                "clone_stack",
                "collect_to_cursor",
                "unknown"
              ]
            },
            "slotType": {
              "type": "string",
              "description": "スロットの種類です。",
              "enum": [
                "RESULT",
                "CRAFTING",
                "ARMOR",
                "CONTAINER",
                "QUICKBAR",
                "OUTSIDE",
                "FUEL",
                "result",
                "crafting",
                "armor",
                "container",
                "quickbar",
                "outside",
                "fuel"
              ]
            },
            "closeReason": {
              "type": "string",
              "description": "インベントリを閉じた理由です。",
              "enum": [
                "UNKNOWN",
                "TELEPORT",
                "CANT_USE",
                "UNLOADED",
                "OPEN_NEW",
                "PLAYER",
                "DISCONNECT",
                "DEATH",
                "PLUGIN"
              ]
            }
          }
        },
        "inventory_close": {
          "type": "object",
          "description": "インベントリを閉じます。",
          "properties": {
            "target": {
              "type": "string",
              "description": "対象のプレイヤーです。"
            },
            "reason": {
              "$ref": "#/definitions/action/definitions/inventory_$base/definitions/closeReason"
            }
          },
          "$ref": "#/definitions/action/definitions/inventory_$base"
        },
        "inventory_interact_$base": {
          "type": "object",
          "properties": {
            "target": {
              "type": "string",
              "description": "対象のプレイヤーです。"
            }
          },
          "$ref": "#/definitions/action/definitions/inventory_$base"
        },
        "inventory_click": {
          "type": "object",
          "description": "インベントリのクリックを検知します",
          "properties": {
            "type": {
              "$ref": "#/definitions/action/definitions/inventory_$base/definitions/clickType"
            },
            "action": {
              "$ref": "#/definitions/action/definitions/inventory_$base/definitions/inventoryAction"
            },
            "slotType": {
              "$ref": "#/definitions/action/definitions/inventory_$base/definitions/slotType"
            },
            "slot": {
              "type": "integer",
              "description": "スロット番号です。",
              "minimum": 0,
              "maximum": 40
            },
            "rawSlot": {
              "type": "integer",
              "description": "スロット番号です。",
              "minimum": 0
            },
            "clickedItem": {
              "description": "クリックされたアイテムです。",
              "$ref": "#/definitions/itemStack"
            },
            "button": {
              "type": "integer",
              "description": "ボタンの番号です。",
              "minimum": 0
            },
            "cursorItem": {
              "description": "カーソルにあるアイテムです。",
              "$ref": "#/definitions/itemStack"
            }
          },
          "$ref": "#/definitions/action/definitions/inventory_interact_$base"
        },
        "inventory_creative": {
          "type": "object",
          "description": "クリエイティブインベントリのアイテムをクリックしたときに実行されます。",
          "properties": {
            "item": {
              "description": "クリックされたアイテムです。",
              "$ref": "#/definitions/itemStack"
            }
          },
          "$ref": "#/definitions/action/definitions/inventory_click"
        },
        "inventory_open": {
          "type": "object",
          "description": "インベントリを閉きます。",
          "properties": {
            "target": {
              "type": "string",
              "description": "対象のプレイヤーです。"
            },
            "inventory": {
              "description": "開くインベントリです。",
              "$ref": "#/definitions/inventory"
            }
          },
          "$ref": "#/definitions/action/definitions/inventory_$base"
        },
        "player_$base": {
          "type": "object",
          "properties": {
            "target": {
              "type": "string",
              "description": "対象のプレイヤーです。"
            }
          }
        },
        "player_advancement": {
          "type": "object",
          "description": "プレイヤに進捗を達成させます。",
          "properties": {
            "advancement": {
              "type": "string",
              "description": "達成する進捗です。",
              "maxLength": 32767,
              "$ref": "#/definitions/namespacedKey"
            },
            "criterion": {
              "type": "string",
              "description": "達成する条件です。省略した場合は全ての条件を達成します。",
              "maxLength": 32767,
              "$ref": "#/definitions/namespacedKey"
            }
          },
          "$ref": "#/definitions/action/definitions/player_$base"
        },
        "player_animation": {
          "type": "object",
          "description": "プレイヤのアニメーションを再生します。",
          "properties": {
            "type": {
              "type": "string",
              "description": "再生するアニメーションの種類です。",
              "enum": [
                "ARM_SWING",
                "arm_swing"
              ]
            }
          },
          "$ref": "#/definitions/action/definitions/player_$base"
        },
        "player_chat": {
          "type": "object",
          "description": "プレイヤにチャットをさせます。",
          "properties": {
            "message": {
              "type": "string",
              "description": "送信するメッセージまたは判定用の正規表現です。"
            },
            "format": {
              "type": "string",
              "description": "メッセージのフォーマットです。",
              "example": "<%1$s> %2$s"
            }
          },
          "$ref": "#/definitions/action/definitions/player_$base"
        },
        "player_death": {
          "type": "object",
          "description": "プレイヤをキルします。",
          "properties": {
            "killer": {
              "type": "string",
              "description": "ターゲットを殺すプレイヤーです。"
            },
            "deathMessage": {
              "type": "string",
              "description": "死亡メッセージです。"
            },
            "exp": {
              "type": "integer",
              "description": "死亡時したプレイヤの新しい経験値です。",
              "minimum": 0
            },
            "level": {
              "type": "integer",
              "description": "死亡時したプレイヤの新しいレベルです。",
              "minimum": 0
            },
            "totalExp": {
              "type": "integer",
              "description": "死亡時したプレイヤの新しい総経験値です。",
              "minimum": 0
            },
            "keepLevel": {
              "type": "boolean",
              "description": "死亡時したプレイヤのレベルを保持するかどうかです。"
            },
            "keepInventory": {
              "type": "boolean",
              "description": "死亡時したプレイヤのインベントリを保持するかどうかです。"
            },
            "doExpDrop": {
              "type": "boolean",
              "description": "死亡時したプレイヤの経験値ドロップをするかどうかです。"
            }
          },
          "$ref": "#/definitions/action/definitions/player_$base"
        },
        "player_drop_item": {
          "type": "object",
          "description": "プレイヤにアイテムをドロップさせます。",
          "properties": {
            "item": {
              "description": "ドロップするアイテムです。",
              "$ref": "#/definitions/entityItem"
            }
          },
          "$ref": "#/definitions/action/definitions/player_$base"
        },
        "player_flight": {
          "type": "object",
          "description": "プレイヤを飛行させます。",
          "properties": {
            "flying": {
              "type": "boolean",
              "description": "プレイヤーが飛行中かどうかです。"
            }
          },
          "$ref": "#/definitions/action/definitions/player_$base"
        },
        "player_gamemode": {
          "type": "object",
          "description": "プレイヤのゲームモードを変更します。",
          "properties": {
            "gamemode": {
              "type": "string",
              "description": "ゲームモードです。",
              "enum": [
                "SURVIVAL",
                "CREATIVE",
                "ADVENTURE",
                "SPECTATOR",
                "survival",
                "creative",
                "adventure",
                "spectator"
              ]
            },
            "cause": {
              "type": "string",
              "description": "ゲームモードを変更した原因です。",
              "enum": [
                "COMMAND",
                "PLUGIN",
                "DEFAULT_GAMEMODE",
                "HARDCORE_DEATH",
                "UNKNOWN",
                "command",
                "plugin",
                "default_gamemode",
                "hardcore_death",
                "unknown"
              ]
            },
            "cancelMessage": {
              "type": "string",
              "description": "ゲームモード変更をキャンセルされたときに表示するメッセージです。"
            }
          },
          "$ref": "#/definitions/action/definitions/player_$base"
        },
        "player_hotbar": {
          "type": "object",
          "description": "プレイヤのホットバーのアイテムを変更します。",
          "properties": {
            "slot": {
              "type": "integer",
              "description": "ホットバーのスロットです。",
              "minimum": 0,
              "maximum": 8
            },
            "previous_slot": {
              "type": "integer",
              "description": "ホットバーのスロットが変更される前のスロットです。",
              "minimum": 0,
              "maximum": 8
            },
            "item": {
              "description": "ホットバーのスロットに入っているアイテムです。",
              "$ref": "#/definitions/itemStack"
            }
          },
          "$ref": "#/definitions/action/definitions/player_$base"
        },
        "player_interact_block": {
          "type": "object",
          "description": "プレイヤにブロックを操作させます。",
          "properties": {
            "action": {
              "type": "string",
              "description": "プレイヤーが行ったアクションです。",
              "enum": [
                "RIGHT_CLICK_BLOCK",
                "LEFT_CLICK_BLOCK",
                "RIGHT_CLICK_AIR",
                "LEFT_CLICK_AIR",
                "right_click_block",
                "left_click_block",
                "right_click_air",
                "left_click_air"
              ]
            },
            "block": {
              "description": "プレイヤーがクリックしたブロックです。",
              "$ref": "#/definitions/block"
            },
            "hand": {
              "type": "string",
              "description": "プレイヤーがクリックした手です。",
              "enum": [
                "HAND",
                "OFF_HAND",
                "hand",
                "off_hand"
              ]
            }
          },
          "$ref": "#/definitions/action/definitions/player_$base"
        },
        "player_item_break": {
          "type": "object",
          "description": "プレイヤにアイテムを破壊させます。",
          "properties": {
            "item": {
              "description": "壊れたアイテムです。",
              "$ref": "#/definitions/itemStack"
            },
            "slot": {
              "description": "壊れたアイテムが入っていたスロットです。",
              "$ref": "#/definitions/itemSlot"
            }
          },
          "$ref": "#/definitions/action/definitions/player_$base"
        },
        "player_item_consume": {
          "type": "object",
          "description": "プレイヤ",
          "properties": {
            "item": {
              "description": "消費するアイテムです。",
              "$ref": "#/definitions/itemStack"
            },
            "replacement": {
              "description": "消費後にプレイヤーに与えるアイテムです。",
              "$ref": "#/definitions/itemStack"
            }
          },
          "$ref": "#/definitions/action/definitions/player_$base"
        },
        "player_join": {
          "type": "object",
          "description": "プレイヤをサーバに参加させます。",
          "properties": {
            "message": {
              "type": "string",
              "description": "プレイヤーがサーバーに参加したときに表示するメッセージです。"
            }
          },
          "$ref": "#/definitions/action/definitions/player_$base"
        },
        "player_kick": {
          "type": "object",
          "description": "プレイヤをサーバから強制退出させます。",
          "properties": {
            "leaveMessage": {
              "type": "string",
              "description": "プレイヤーがサーバーから退出したときに表示するメッセージです。"
            },
            "message": {
              "type": "string",
              "description": "プレイヤーがサーバーからキックされたときに表示するメッセージです。"
            },
            "cause": {
              "type": "string",
              "description": "プレイヤーがサーバーからキックされた原因です。",
              "enum": [
                "PLUGIN",
                "WHITELIST",
                "BANNED",
                "IP_BANNED",
                "KICK_COMMAND",
                "FLYING_PLAYER",
                "FLYING_VEHICLE",
                "TIMEOUT",
                "IDLING",
                "INVALID_VEHICLE_MOVEMENT",
                "INVALID_PLAYER_MOVEMENT",
                "INVALID_ENTITY_ATTACKED",
                "INVALID_PAYLOAD",
                "SPAM",
                "ILLEGAL_ACTION",
                "ILLEGAL_CHARACTERS",
                "SELF_INTERACTION",
                "DUPLICATE_LOGIN",
                "RESTART_COMMAND",
                "UNKNOWN",
                "plugin",
                "whitelist",
                "banned",
                "ip_banned",
                "kick_command",
                "flying_player",
                "flying_vehicle",
                "timeout",
                "idling",
                "invalid_vehicle_movement",
                "invalid_player_movement",
                "invalid_entity_attacked",
                "invalid_payload",
                "spam",
                "illegal_action",
                "illegal_characters",
                "self_interaction",
                "duplicate_login",
                "restart_command",
                "unknown"
              ]
            }
          },
          "$ref": "#/definitions/action/definitions/player_$base"
        },
        "player_move": {
          "type": "object",
          "description": "プレイヤを移動させます。",
          "properties": {
            "from": {
              "$ref": "#/definitions/location",
              "description": "移動元の座標を指定します。"
            },
            "to": {
              "$ref": "#/definitions/location",
              "description": "移動先の座標を指定します。"
            }
          },
          "$ref": "#/definitions/action/definitions/player_$base"
        },
        "player_projectile_launch": {
          "type": "object",
          "description": "プレイヤに投げ物を射出させます。",
          "properties": {
            "type": {
              "type": "string",
              "description": "投げ物の種類です。",
              "enum": [
                "ARROW",
                "SNOWBALL",
                "EGG",
                "FIREBALL",
                "SMALL_FIREBALL",
                "ENDER_PEARL",
                "WITHER_SKULL",
                "SHULKER_BULLET",
                "DRAGON_FIREBALL",
                "POTION",
                "EXPERIENCE_BOTTLE",
                "ITEM",
                "FIREWORK",
                "TRIDENT",
                "arrow",
                "snowball",
                "egg",
                "fireball",
                "small_fireball",
                "ender_pearl",
                "wither_skull",
                "shulker_bullet",
                "dragon_fireball",
                "potion",
                "experience_bottle",
                "item",
                "firework",
                "trident"
              ]
            },
            "velocity": {
              "description": "投げ物の速度や向きです。",
              "$ref": "#/definitions/vector"
            },
            "epsilon": {
              "description": "投げ物の速度や向きを比較する際に許容する誤差です。",
              "$ref": "#/definitions/vector"
            }
          },
          "$ref": "#/definitions/action/definitions/player_$base"
        },
        "player_quit": {
          "type": "object",
          "description": "プレイヤをサーバから退出させます。",
          "properties": {
            "message": {
              "type": "string",
              "description": "プレイヤーがサーバーから退出したときに表示するメッセージです。"
            },
            "reason": {
              "type": "string",
              "description": "プレイヤーがサーバーから退出した原因です。",
              "enum": [
                "DISCONNECTED",
                "KICKED",
                "TIMED_OUT",
                "ERRONEOUS_STATE",
                "disconnected",
                "kicked",
                "timed_out",
                "erroneous_state"
              ]
            }
          },
          "$ref": "#/definitions/action/definitions/player_$base"
        },
        "player_respawn": {
          "type": "object",
          "description": "プレイヤをリスポーンさせます。",
          "properties": {
            "isBed": {
              "type": "boolean",
              "description": "プレイヤーがベッドでスポーンするかどうかです。"
            },
            "isAnchor": {
              "type": "boolean",
              "description": "プレイヤーが錨でスポーンするかどうかです。"
            },
            "location": {
              "description": "プレイヤーがスポーンする場所です。",
              "$ref": "#/definitions/location"
            }
          },
          "$ref": "#/definitions/action/definitions/player_$base"
        },
        "player_sneak": {
          "type": "object",
          "description": "プレイヤをしゃがませます。",
          "properties": {
            "sneaking": {
              "type": "boolean",
              "description": "プレイヤーがスニークしているかどうかです。"
            }
          },
          "$ref": "#/definitions/action/definitions/player_$base"
        },
        "player_sprint": {
          "type": "object",
          "description": "プレイヤを走らせます。",
          "properties": {
            "sneaking": {
              "type": "boolean",
              "description": "プレイヤーが走っているかどうかです。"
            }
          },
          "$ref": "#/definitions/action/definitions/player_$base"
        },
        "player_teleport": {
          "type": "object",
          "description": "プレイヤをてレポートさせます。",
          "properties": {
            "cause": {
              "$ref": "#/definitions/teleportCause",
              "description": "移動元の座標を指定します。"
            }
          },
          "$ref": "#/definitions/action/definitions/player_move"
        },
        "message": {
          "type": "object",
          "description": "プレイヤにメッセージを送信します。",
          "properties": {
            "message": {
              "type": "string",
              "description": "メッセージの内容です。",
              "maxLength": 32768
            },
            "recipient": {
              "type": "string",
              "description": "メッセージを受け取るプレイヤーの名前または UUID です。"
            }
          }
        },
        "milestone": {
          "type": "object",
          "description": "マイルストーンを達成します。",
          "properties": {
            "name": {
              "type": "string",
              "description": "マイルストーンの名前です。"
            },
            "reached": {
              "type": "boolean",
              "description": "マイルストーンに到達したかどうかです。検証時はこれと比較します。"
            }
          },
          "required": [
            "name"
          ]
        },
        "broadcast": {
          "type": "object",
          "description": "サーバにブロードキャストメッセージを送信します。",
          "properties": {
            "message": {
              "type": "string",
              "description": "送信するメッセージかその判定用の正規表現です。"
            },
            "recipients": {
              "type": "array",
              "description": "メッセージを受け取るプレイヤーの名前です。",
              "items": {
                "type": "string"
              }
            },
            "permission": {
              "type": "string",
              "description": "メッセージを受け取るために必要な権限です。"
            },
            "strictRecipients": {
              "type": "boolean",
              "description": "有効な場合、余計なプレイヤがメッセージを受け取ると失敗します。"
            }
          }
        },
        "command_dispatch": {
          "type": "object",
          "description": "コマンドを実行します。",
          "properties": {
            "command": {
              "type": "string",
              "description": "実行されるコマンドです。実行を検知する場合は正規表現を使用できます。"
            },
            "sender": {
              "type": "string",
              "description": "実行するプレイヤーです。"
            }
          }
        },
        "server_log": {
          "type": "object",
          "description": "サーバにログを送信します。",
          "properties": {
            "message": {
              "type": "string",
              "description": "対象のログを正規表現で記述します。"
            },
            "level": {
              "type": "string",
              "description": "ログのレベルです。",
              "enum": [
                "INFO",
                "WARNING",
                "WARN",
                "ERROR",
                "CONFIG",
                "DEBUG",
                "TRACE",
                "FATAL",
                "FINE",
                "FINER",
                "FINEST",
                "SEVERE",
                "info",
                "warning",
                "warn",
                "error",
                "config",
                "debug",
                "trace",
                "fatal",
                "fine",
                "finer",
                "finest",
                "severe"
              ]
            },
            "sender": {
              "type": "string",
              "description": "ログを送信したプラグインやロガーの名前です。"
            }
          }
        },
        "server_plugin_disable": {
          "type": "object",
          "description": "サーバのプラグインを無効化します。",
          "properties": {
            "plugin": {
              "type": "string",
              "description": "無効化されるプラグインです。"
            }
          }
        },
        "server_plugin_enable": {
          "type": "object",
          "description": "サーバのプラグインを有効化します。",
          "properties": {
            "plugin": {
              "type": "string",
              "description": "有効化されるプラグインです。"
            }
          }
        },
        "tab_complete": {
          "type": "object",
          "description": "コマンドをタブ補完します。",
          "properties": {
            "sender": {
              "type": "string",
              "description": "実行するプレイヤーです。"
            },
            "buffer": {
              "type": "string",
              "description": "入力された不完全なコマンドです。補完を検知する場合は正規表現を使用できます。"
            },
            "completions": {
              "type": "array",
              "description": "補完候補の配列です。補完を検知する場合は正規表現を使用できます。"
            }
          }
        },
        "whitelist_toggle": {
          "type": "object",
          "description": "サーバのホワイトリストを切り替えます。",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "ホワイトリストが有効かどうかです。"
            }
          }
        },
        "world_$base": {
          "type": "object",
          "properties": {
            "world": {
              "description": "ワールドの名前の名前空間付きキーです。",
              "$ref": "#/definitions/namespacedKey"
            }
          }
        },
        "world_border_changed": {
          "type": "object",
          "description": "ワールドボーダの変更の完了を検知します。",
          "properties": {
            "size": {
              "type": "number",
              "description": "ワールドボーダのサイズです。"
            },
            "size_old": {
              "type": "number",
              "description": "ワールドボーダのサイズの変更前の値です。"
            },
            "duration": {
              "type": "number",
              "description": "ワールドボーダの変更にかかる時間です。"
            }
          },
          "$ref": "#/definitions/action/definitions/world_$base"
        },
        "world_border": {
          "type": "object",
          "description": "ワールドのボーダを変更します。",
          "properties": {
            "type": {
              "type": "string",
              "description": "ワールドボーダの変更の種類です。",
              "enum": [
                "STARTED_MOVE",
                "INSTANT_MOVE",
                "started_move",
                "instant_move"
              ]
            },
            "size": {
              "type": "number",
              "description": "ワールドボーダのサイズです。"
            },
            "size_old": {
              "type": "number",
              "description": "ワールドボーダのサイズの変更前の値です。"
            },
            "duration": {
              "type": "number",
              "description": "ワールドボーダの変更にかかる時間です。"
            },
            "center": {
              "type": "object",
              "description": "ワールドボーダの中心座標です。",
              "$ref": "#/definitions/location"
            },
            "center_old": {
              "type": "object",
              "description": "ワールドボーダの中心座標の変更前の値です。",
              "$ref": "#/definitions/location"
            }
          },
          "$ref": "#/definitions/action/definitions/world_$base"
        },
        "world_game_rule": {
          "type": "object",
          "description": "ワールドのゲームルールを設定します",
          "properties": {
            "rule": {
              "type": "string",
              "description": "ゲームルールの名前です。",
              "enum": [
                "announceAdvancements",
                "commandBlockOutput",
                "disableElytraMovementCheck",
                "disableRaids",
                "doDaylightCycle",
                "doEntityDrops",
                "doFireTick",
                "doImmediateRespawn",
                "doInsomnia",
                "doLimitedCrafting",
                "doMobLoot",
                "doMobSpawning",
                "doPatrolSpawning",
                "doTileDrops",
                "doTraderSpawning",
                "doWeatherCycle",
                "drowningDamage",
                "fallDamage",
                "fireDamage",
                "forgiveDeadPlayers",
                "keepInventory",
                "logAdminCommands",
                "maxCommandChainLength",
                "maxEntityCramming",
                "mobGriefing",
                "naturalRegeneration",
                "playersSleepingPercentage",
                "randomTickSpeed",
                "reducedDebugInfo",
                "sendCommandFeedback",
                "showDeathMessages",
                "spawnRadius",
                "spectatorsGenerateChunks",
                "universalAnger",
                "disableRaids",
                "doImmediateRespawn",
                "doPatrolSpawning",
                "doTraderSpawning",
                "forgiveDeadPlayers",
                "keepInventory",
                "logAdminCommands",
                "maxCommandChainLength",
                "maxEntityCramming",
                "mobGriefing",
                "naturalRegeneration",
                "playersSleepingPercentage",
                "randomTickSpeed",
                "reducedDebugInfo",
                "sendCommandFeedback",
                "showDeathMessages",
                "spawnRadius",
                "spectatorsGenerateChunks",
                "universalAnger"
              ]
            },
            "value": {
              "type": [
                "boolean",
                "number"
              ],
              "description": "ゲームルールの値です。"
            }
          },
          "$ref": "#/definitions/action/definitions/world_$base"
        }
      }
    },
    "actor": {
      "$ref": "#/definitions/entity",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "アクターの名前です。",
          "maxLength": 16
        },
        "online": {
          "type": "boolean",
          "description": "アクターがオンラインかどうかです。",
          "default": true
        },
        "displayName": {
          "type": "string",
          "description": "アクターの表示名です。"
        },
        "playerList": {
          "type": "object",
          "description": "アクターのプレイヤーリストにおける扱いです。",
          "properties": {
            "name": {
              "type": "string",
              "description": "プレイヤーリストに表示される名前です。"
            },
            "header": {
              "type": "string",
              "description": "プレイヤーリストに表示されるヘッダーです。"
            },
            "footer": {
              "type": "string",
              "description": "プレイヤーリストに表示されるフッターです。"
            }
          }
        },
        "compass": {
          "$ref": "#/definitions/location",
          "description": "アクターのコンパスのターゲットです。"
        },
        "bedLocation": {
          "$ref": "#/definitions/location",
          "description": "アクターのベッドスポーンの位置です。"
        },
        "exp": {
          "type": "integer",
          "description": "アクターの経験値です。"
        },
        "level": {
          "type": "integer",
          "description": "アクターのレベルです。"
        },
        "totalExp": {
          "type": "integer",
          "description": "アクターの総経験値です。"
        },
        "flyable": {
          "type": "boolean",
          "description": "アクターが飛行できるかどうかです。ゲームモードがクリエイティブおよびスペクテイタの場合は, 暗黙的に true になります。"
        },
        "flying": {
          "type": "boolean",
          "description": "アクターが飛行中かどうかです。"
        },
        "walkSpeed": {
          "type": "number",
          "description": "アクターの歩行速度です。"
        },
        "flySpeed": {
          "type": "number",
          "description": "アクターの飛行速度です。"
        },
        "inventory": {
          "$ref": "#/definitions/playerInventory",
          "description": "アクターのインベントリです。"
        },
        "enderChest": {
          "$ref": "#/definitions/inventory",
          "description": "アクターのエンダーチェストです。"
        },
        "mainHand": {
          "type": "string",
          "description": "アクターの利き手です。",
          "enum": [
            "left",
            "right",
            "LEFT",
            "RIGHT"
          ],
          "default": "right"
        },
        "gamemode": {
          "type": "string",
          "description": "アクターのゲームモードです。",
          "enum": [
            "survival",
            "creative",
            "adventure",
            "spectator",
            "SURVIVAL",
            "CREATIVE",
            "ADVENTURE",
            "SPECTATOR"
          ],
          "default": "survival"
        },
        "foodLevel": {
          "type": "integer",
          "description": "アクターの食料レベルです。",
          "minimum": 0,
          "maximum": 20,
          "default": 20
        },
        "op": {
          "type": [
            "boolean",
            "integer"
          ],
          "minimum": 0,
          "maximum": 4,
          "description": "アクターの OP レベルです。 0 は OP ではないことを意味します。"
        },
        "permissions": {
          "type": "array",
          "description": "アクターに与える権限です。",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "stage": {
      "type": "object",
      "description": "シナリオを実行するステージです。",
      "properties": {
        "copyOf": {
          "type": "string",
          "description": "オリジナルのワールドの名前です。サーバ上に存在するワールドをもとに, 新しくステージを作成します。"
        },
        "type": {
          "type": "string",
          "description": "ステージとして使用するワールドの種類です。",
          "enum": [
            "normal",
            "flat",
            "large_biomes",
            "amplified",
            "NORMAL",
            "FLAT",
            "LARGE_BIOMES",
            "AMPLIFIED"
          ],
          "default": "normal"
        },
        "seed": {
          "type": "number",
          "description": "ステージとして使用するワールドのシードです。"
        },
        "structures": {
          "type": "boolean",
          "description": "ステージとして使用するワールドに構造物を生成するかどうかです。",
          "default": true
        },
        "env": {
          "type": "string",
          "description": "ステージとして使用するワールドの環境です。",
          "enum": [
            "normal",
            "nether",
            "end",
            "custom",
            "NORMAL",
            "NETHER",
            "END",
            "CUSTOM"
          ],
          "default": "normal"
        },
        "hardcore": {
          "type": "boolean",
          "description": "ステージとして使用するワールドがハードコアかどうかです。",
          "default": false
        }
      }
    },
    "trigger": {
      "type": "object",
      "description": "トリガとよばれる, シナリオの実行条件のオブジェクトです。",
      "properties": {
        "type": {
          "type": "string",
          "description": "トリガの種類です。",
          "enum": [
            "manual_dispatch",
            "schedule",
            "on_action",
            "on_load"
          ]
        },
        "before": {
          "$ref": "#/definitions/scenarios",
          "description": "シナリオがこのトリガによって実行される場合, 本シナリオの実行前に実行するシナリオを定義します。"
        },
        "after": {
          "$ref": "#/definitions/scenarios",
          "description": "シナリオがこのトリガによって実行される場合, 本シナリオの実行後に実行するシナリオを定義します。"
        },
        "runif": {
          "type": "object",
          "description": "シナリオの実行条件を定義します。アクションで定義します。満たしていない場合はスキップされます。",
          "$ref": "#/definitions/action"
        }
      },
      "required": [
        "type"
      ],
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "on_action"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/action"
          }
        }
      ]
    },
    "scenarios": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/scenario"
      },
      "maxProperties": 1
    },
    "location": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "description": "X 座標です。"
        },
        "y": {
          "type": "number",
          "description": "Y 座標です。"
        },
        "z": {
          "type": "number",
          "description": "Z 座標です。"
        },
        "yaw": {
          "type": "number",
          "description": "YAW 座標です。"
        },
        "pitch": {
          "type": "number",
          "description": "PITCH 座標です。"
        },
        "world": {
          "type": "string",
          "description": "ワールド名です。",
          "default": "world",
          "pattern": "^[a-zA-Z0-9_]+$"
        }
      },
      "required": [
        "x",
        "y",
        "z"
      ]
    },
    "block": {
      "type": "object",
      "description": "ブロックです。",
      "properties": {
        "type": {
          "type": "string",
          "description": "ブロックの種類です。"
        },
        "location": {
          "type": "object",
          "description": "ブロックの座標です。",
          "$ref": "#/definitions/location"
        },
        "metadata": {
          "type": "object",
          "description": "ブロックのメタデータです。",
          "additionalProperties": true
        },
        "light": {
          "type": "number",
          "description": "ブロックの明るさです。",
          "minimum": 0,
          "maximum": 15
        },
        "biome": {
          "type": "string",
          "description": "ブロックのバイオームです。",
          "enum": [
            "OCEAN",
            "PLAINS",
            "DESERT",
            "MOUNTAINS",
            "FOREST",
            "TAIGA",
            "SWAMP",
            "RIVER",
            "NETHER_WASTES",
            "THE_END",
            "FROZEN_OCEAN",
            "FROZEN_RIVER",
            "SNOWY_TUNDRA",
            "SNOWY_MOUNTAINS",
            "MUSHROOM_FIELDS",
            "MUSHROOM_FIELD_SHORE",
            "BEACH",
            "DESERT_HILLS",
            "WOODED_HILLS",
            "TAIGA_HILLS",
            "MOUNTAIN_EDGE",
            "JUNGLE",
            "JUNGLE_HILLS",
            "JUNGLE_EDGE",
            "DEEP_OCEAN",
            "STONE_SHORE",
            "SNOWY_BEACH",
            "BIRCH_FOREST",
            "BIRCH_FOREST_HILLS",
            "DARK_FOREST",
            "SNOWY_TAIGA",
            "SNOWY_TAIGA_HILLS",
            "GIANT_TREE_TAIGA",
            "GIANT_TREE_TAIGA_HILLS",
            "WOODED_MOUNTAINS",
            "SAVANNA",
            "SAVANNA_PLATEAU",
            "BADLANDS",
            "WOODED_BADLANDS_PLATEAU",
            "BADLANDS_PLATEAU",
            "SMALL_END_ISLANDS",
            "END_MIDLANDS",
            "END_HIGHLANDS",
            "END_BARRENS",
            "WARM_OCEAN",
            "LUKEWARM_OCEAN",
            "COLD_OCEAN",
            "DEEP_WARM_OCEAN",
            "DEEP_LUKEWARM_OCEAN",
            "DEEP_COLD_OCEAN",
            "DEEP_FROZEN_OCEAN",
            "THE_VOID",
            "SUNFLOWER_PLAINS",
            "DESERT_LAKES",
            "GRAVELLY_MOUNTAINS",
            "FLOWER_FOREST",
            "TAIGA_MOUNTAINS",
            "SWAMP_HILLS",
            "ICE_SPIKES",
            "MODIFIED_JUNGLE",
            "MODIFIED_JUNGLE_EDGE",
            "TALL_BIRCH_FOREST",
            "TALL_BIRCH_HILLS",
            "DARK_FOREST_HILLS",
            "SNOWY_TAIGA_MOUNTAINS",
            "GIANT_SPRUCE_TAIGA",
            "GIANT_SPRUCE_TAIGA_HILLS",
            "MODIFIED_GRAVELLY_MOUNTAINS",
            "SHATTERED_SAVANNA",
            "SHATTERED_SAVANNA_PLATEAU",
            "ERODED_BADLANDS",
            "MODIFIED_WOODED_BADLANDS_PLATEAU",
            "MODIFIED_BADLANDS_PLATEAU",
            "BAMBOO_JUNGLE",
            "BAMBOO_JUNGLE_HILLS",
            "SOUL_SAND_VALLEY",
            "CRIMSON_FOREST",
            "WARPED_FOREST",
            "BASALT_DELTAS",
            "CUSTOM"
          ]
        }
      }
    },
    "sound": {
      "description": "音の種類を表します。",
      "type": "string",
      "enum": [
        "AMBIENT_BASALT_DELTAS_ADDITIONS",
        "AMBIENT_BASALT_DELTAS_LOOP",
        "AMBIENT_BASALT_DELTAS_MOOD",
        "AMBIENT_CAVE",
        "AMBIENT_CRIMSON_FOREST_ADDITIONS",
        "AMBIENT_CRIMSON_FOREST_LOOP",
        "AMBIENT_CRIMSON_FOREST_MOOD",
        "AMBIENT_NETHER_WASTES_ADDITIONS",
        "AMBIENT_NETHER_WASTES_LOOP",
        "AMBIENT_NETHER_WASTES_MOOD",
        "AMBIENT_SOUL_SAND_VALLEY_ADDITIONS",
        "AMBIENT_SOUL_SAND_VALLEY_LOOP",
        "AMBIENT_SOUL_SAND_VALLEY_MOOD",
        "AMBIENT_UNDERWATER_ENTER",
        "AMBIENT_UNDERWATER_EXIT",
        "AMBIENT_UNDERWATER_LOOP",
        "AMBIENT_UNDERWATER_LOOP_ADDITIONS",
        "AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE",
        "AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE",
        "AMBIENT_WARPED_FOREST_ADDITIONS",
        "AMBIENT_WARPED_FOREST_LOOP",
        "AMBIENT_WARPED_FOREST_MOOD",
        "BLOCK_ANCIENT_DEBRIS_BREAK",
        "BLOCK_ANCIENT_DEBRIS_FALL",
        "BLOCK_ANCIENT_DEBRIS_HIT",
        "BLOCK_ANCIENT_DEBRIS_PLACE",
        "BLOCK_ANCIENT_DEBRIS_STEP",
        "BLOCK_ANVIL_BREAK",
        "BLOCK_ANVIL_DESTROY",
        "BLOCK_ANVIL_FALL",
        "BLOCK_ANVIL_HIT",
        "BLOCK_ANVIL_LAND",
        "BLOCK_ANVIL_PLACE",
        "BLOCK_ANVIL_STEP",
        "BLOCK_ANVIL_USE",
        "BLOCK_BAMBOO_BREAK",
        "BLOCK_BAMBOO_FALL",
        "BLOCK_BAMBOO_HIT",
        "BLOCK_BAMBOO_PLACE",
        "BLOCK_BAMBOO_SAPLING_BREAK",
        "BLOCK_BAMBOO_SAPLING_HIT",
        "BLOCK_BAMBOO_SAPLING_PLACE",
        "BLOCK_BAMBOO_STEP",
        "BLOCK_BARREL_CLOSE",
        "BLOCK_BARREL_OPEN",
        "BLOCK_BASALT_BREAK",
        "BLOCK_BASALT_FALL",
        "BLOCK_BASALT_HIT",
        "BLOCK_BASALT_PLACE",
        "BLOCK_BASALT_STEP",
        "BLOCK_BEACON_ACTIVATE",
        "BLOCK_BEACON_AMBIENT",
        "BLOCK_BEACON_DEACTIVATE",
        "BLOCK_BEACON_POWER_SELECT",
        "BLOCK_BEEHIVE_DRIP",
        "BLOCK_BEEHIVE_ENTER",
        "BLOCK_BEEHIVE_EXIT",
        "BLOCK_BEEHIVE_SHEAR",
        "BLOCK_BEEHIVE_WORK",
        "BLOCK_BELL_RESONATE",
        "BLOCK_BELL_USE",
        "BLOCK_BLASTFURNACE_FIRE_CRACKLE",
        "BLOCK_BONE_BLOCK_BREAK",
        "BLOCK_BONE_BLOCK_FALL",
        "BLOCK_BONE_BLOCK_HIT",
        "BLOCK_BONE_BLOCK_PLACE",
        "BLOCK_BONE_BLOCK_STEP",
        "BLOCK_BREWING_STAND_BREW",
        "BLOCK_BUBBLE_COLUMN_BUBBLE_POP",
        "BLOCK_BUBBLE_COLUMN_UPWARDS_AMBIENT",
        "BLOCK_BUBBLE_COLUMN_UPWARDS_INSIDE",
        "BLOCK_BUBBLE_COLUMN_WHIRLPOOL_AMBIENT",
        "BLOCK_BUBBLE_COLUMN_WHIRLPOOL_INSIDE",
        "BLOCK_CAMPFIRE_CRACKLE",
        "BLOCK_CHAIN_BREAK",
        "BLOCK_CHAIN_FALL",
        "BLOCK_CHAIN_HIT",
        "BLOCK_CHAIN_PLACE",
        "BLOCK_CHAIN_STEP",
        "BLOCK_CHEST_CLOSE",
        "BLOCK_CHEST_LOCKED",
        "BLOCK_CHEST_OPEN",
        "BLOCK_CHORUS_FLOWER_DEATH",
        "BLOCK_CHORUS_FLOWER_GROW",
        "BLOCK_COMPARATOR_CLICK",
        "BLOCK_COMPOSTER_EMPTY",
        "BLOCK_COMPOSTER_FILL",
        "BLOCK_COMPOSTER_FILL_SUCCESS",
        "BLOCK_COMPOSTER_READY",
        "BLOCK_CONDUIT_ACTIVATE",
        "BLOCK_CONDUIT_AMBIENT",
        "BLOCK_CONDUIT_AMBIENT_SHORT",
        "BLOCK_CONDUIT_ATTACK_TARGET",
        "BLOCK_CONDUIT_DEACTIVATE",
        "BLOCK_CORAL_BLOCK_BREAK",
        "BLOCK_CORAL_BLOCK_FALL",
        "BLOCK_CORAL_BLOCK_HIT",
        "BLOCK_CORAL_BLOCK_PLACE",
        "BLOCK_CORAL_BLOCK_STEP",
        "BLOCK_CROP_BREAK",
        "BLOCK_DISPENSER_DISPENSE",
        "BLOCK_DISPENSER_FAIL",
        "BLOCK_DISPENSER_LAUNCH",
        "BLOCK_ENCHANTMENT_TABLE_USE",
        "BLOCK_ENDER_CHEST_CLOSE",
        "BLOCK_ENDER_CHEST_OPEN",
        "BLOCK_END_GATEWAY_SPAWN",
        "BLOCK_END_PORTAL_FRAME_FILL",
        "BLOCK_END_PORTAL_SPAWN",
        "BLOCK_FENCE_GATE_CLOSE",
        "BLOCK_FENCE_GATE_OPEN",
        "BLOCK_FIRE_AMBIENT",
        "BLOCK_FIRE_EXTINGUISH",
        "BLOCK_FUNGUS_BREAK",
        "BLOCK_FUNGUS_FALL",
        "BLOCK_FUNGUS_HIT",
        "BLOCK_FUNGUS_PLACE",
        "BLOCK_FUNGUS_STEP",
        "BLOCK_FURNACE_FIRE_CRACKLE",
        "BLOCK_GILDED_BLACKSTONE_BREAK",
        "BLOCK_GILDED_BLACKSTONE_FALL",
        "BLOCK_GILDED_BLACKSTONE_HIT",
        "BLOCK_GILDED_BLACKSTONE_PLACE",
        "BLOCK_GILDED_BLACKSTONE_STEP",
        "BLOCK_GLASS_BREAK",
        "BLOCK_GLASS_FALL",
        "BLOCK_GLASS_HIT",
        "BLOCK_GLASS_PLACE",
        "BLOCK_GLASS_STEP",
        "BLOCK_GRASS_BREAK",
        "BLOCK_GRASS_FALL",
        "BLOCK_GRASS_HIT",
        "BLOCK_GRASS_PLACE",
        "BLOCK_GRASS_STEP",
        "BLOCK_GRAVEL_BREAK",
        "BLOCK_GRAVEL_FALL",
        "BLOCK_GRAVEL_HIT",
        "BLOCK_GRAVEL_PLACE",
        "BLOCK_GRAVEL_STEP",
        "BLOCK_GRINDSTONE_USE",
        "BLOCK_HONEY_BLOCK_BREAK",
        "BLOCK_HONEY_BLOCK_FALL",
        "BLOCK_HONEY_BLOCK_HIT",
        "BLOCK_HONEY_BLOCK_PLACE",
        "BLOCK_HONEY_BLOCK_SLIDE",
        "BLOCK_HONEY_BLOCK_STEP",
        "BLOCK_IRON_DOOR_CLOSE",
        "BLOCK_IRON_DOOR_OPEN",
        "BLOCK_IRON_TRAPDOOR_CLOSE",
        "BLOCK_IRON_TRAPDOOR_OPEN",
        "BLOCK_LADDER_BREAK",
        "BLOCK_LADDER_FALL",
        "BLOCK_LADDER_HIT",
        "BLOCK_LADDER_PLACE",
        "BLOCK_LADDER_STEP",
        "BLOCK_LANTERN_BREAK",
        "BLOCK_LANTERN_FALL",
        "BLOCK_LANTERN_HIT",
        "BLOCK_LANTERN_PLACE",
        "BLOCK_LANTERN_STEP",
        "BLOCK_LAVA_AMBIENT",
        "BLOCK_LAVA_EXTINGUISH",
        "BLOCK_LAVA_POP",
        "BLOCK_LEVER_CLICK",
        "BLOCK_LILY_PAD_PLACE",
        "BLOCK_LODESTONE_BREAK",
        "BLOCK_LODESTONE_FALL",
        "BLOCK_LODESTONE_HIT",
        "BLOCK_LODESTONE_PLACE",
        "BLOCK_LODESTONE_STEP",
        "BLOCK_METAL_BREAK",
        "BLOCK_METAL_FALL",
        "BLOCK_METAL_HIT",
        "BLOCK_METAL_PLACE",
        "BLOCK_METAL_PRESSURE_PLATE_CLICK_OFF",
        "BLOCK_METAL_PRESSURE_PLATE_CLICK_ON",
        "BLOCK_METAL_STEP",
        "BLOCK_NETHERITE_BLOCK_BREAK",
        "BLOCK_NETHERITE_BLOCK_FALL",
        "BLOCK_NETHERITE_BLOCK_HIT",
        "BLOCK_NETHERITE_BLOCK_PLACE",
        "BLOCK_NETHERITE_BLOCK_STEP",
        "BLOCK_NETHERRACK_BREAK",
        "BLOCK_NETHERRACK_FALL",
        "BLOCK_NETHERRACK_HIT",
        "BLOCK_NETHERRACK_PLACE",
        "BLOCK_NETHERRACK_STEP",
        "BLOCK_NETHER_BRICKS_BREAK",
        "BLOCK_NETHER_BRICKS_FALL",
        "BLOCK_NETHER_BRICKS_HIT",
        "BLOCK_NETHER_BRICKS_PLACE",
        "BLOCK_NETHER_BRICKS_STEP",
        "BLOCK_NETHER_GOLD_ORE_BREAK",
        "BLOCK_NETHER_GOLD_ORE_FALL",
        "BLOCK_NETHER_GOLD_ORE_HIT",
        "BLOCK_NETHER_GOLD_ORE_PLACE",
        "BLOCK_NETHER_GOLD_ORE_STEP",
        "BLOCK_NETHER_ORE_BREAK",
        "BLOCK_NETHER_ORE_FALL",
        "BLOCK_NETHER_ORE_HIT",
        "BLOCK_NETHER_ORE_PLACE",
        "BLOCK_NETHER_ORE_STEP",
        "BLOCK_NETHER_SPROUTS_BREAK",
        "BLOCK_NETHER_SPROUTS_FALL",
        "BLOCK_NETHER_SPROUTS_HIT",
        "BLOCK_NETHER_SPROUTS_PLACE",
        "BLOCK_NETHER_SPROUTS_STEP",
        "BLOCK_NETHER_WART_BREAK",
        "BLOCK_NOTE_BLOCK_BANJO",
        "BLOCK_NOTE_BLOCK_BASEDRUM",
        "BLOCK_NOTE_BLOCK_BASS",
        "BLOCK_NOTE_BLOCK_BELL",
        "BLOCK_NOTE_BLOCK_BIT",
        "BLOCK_NOTE_BLOCK_CHIME",
        "BLOCK_NOTE_BLOCK_COW_BELL",
        "BLOCK_NOTE_BLOCK_DIDGERIDOO",
        "BLOCK_NOTE_BLOCK_FLUTE",
        "BLOCK_NOTE_BLOCK_GUITAR",
        "BLOCK_NOTE_BLOCK_HARP",
        "BLOCK_NOTE_BLOCK_HAT",
        "BLOCK_NOTE_BLOCK_IRON_XYLOPHONE",
        "BLOCK_NOTE_BLOCK_PLING",
        "BLOCK_NOTE_BLOCK_SNARE",
        "BLOCK_NOTE_BLOCK_XYLOPHONE",
        "BLOCK_NYLIUM_BREAK",
        "BLOCK_NYLIUM_FALL",
        "BLOCK_NYLIUM_HIT",
        "BLOCK_NYLIUM_PLACE",
        "BLOCK_NYLIUM_STEP",
        "BLOCK_PISTON_CONTRACT",
        "BLOCK_PISTON_EXTEND",
        "BLOCK_PORTAL_AMBIENT",
        "BLOCK_PORTAL_TRAVEL",
        "BLOCK_PORTAL_TRIGGER",
        "BLOCK_PUMPKIN_CARVE",
        "BLOCK_REDSTONE_TORCH_BURNOUT",
        "BLOCK_RESPAWN_ANCHOR_AMBIENT",
        "BLOCK_RESPAWN_ANCHOR_CHARGE",
        "BLOCK_RESPAWN_ANCHOR_DEPLETE",
        "BLOCK_RESPAWN_ANCHOR_SET_SPAWN",
        "BLOCK_ROOTS_BREAK",
        "BLOCK_ROOTS_FALL",
        "BLOCK_ROOTS_HIT",
        "BLOCK_ROOTS_PLACE",
        "BLOCK_ROOTS_STEP",
        "BLOCK_SAND_BREAK",
        "BLOCK_SAND_FALL",
        "BLOCK_SAND_HIT",
        "BLOCK_SAND_PLACE",
        "BLOCK_SAND_STEP",
        "BLOCK_SCAFFOLDING_BREAK",
        "BLOCK_SCAFFOLDING_FALL",
        "BLOCK_SCAFFOLDING_HIT",
        "BLOCK_SCAFFOLDING_PLACE",
        "BLOCK_SCAFFOLDING_STEP",
        "BLOCK_SHROOMLIGHT_BREAK",
        "BLOCK_SHROOMLIGHT_FALL",
        "BLOCK_SHROOMLIGHT_HIT",
        "BLOCK_SHROOMLIGHT_PLACE",
        "BLOCK_SHROOMLIGHT_STEP",
        "BLOCK_SHULKER_BOX_CLOSE",
        "BLOCK_SHULKER_BOX_OPEN",
        "BLOCK_SLIME_BLOCK_BREAK",
        "BLOCK_SLIME_BLOCK_FALL",
        "BLOCK_SLIME_BLOCK_HIT",
        "BLOCK_SLIME_BLOCK_PLACE",
        "BLOCK_SLIME_BLOCK_STEP",
        "BLOCK_SMITHING_TABLE_USE",
        "BLOCK_SMOKER_SMOKE",
        "BLOCK_SNOW_BREAK",
        "BLOCK_SNOW_FALL",
        "BLOCK_SNOW_HIT",
        "BLOCK_SNOW_PLACE",
        "BLOCK_SNOW_STEP",
        "BLOCK_SOUL_SAND_BREAK",
        "BLOCK_SOUL_SAND_FALL",
        "BLOCK_SOUL_SAND_HIT",
        "BLOCK_SOUL_SAND_PLACE",
        "BLOCK_SOUL_SAND_STEP",
        "BLOCK_SOUL_SOIL_BREAK",
        "BLOCK_SOUL_SOIL_FALL",
        "BLOCK_SOUL_SOIL_HIT",
        "BLOCK_SOUL_SOIL_PLACE",
        "BLOCK_SOUL_SOIL_STEP",
        "BLOCK_STEM_BREAK",
        "BLOCK_STEM_FALL",
        "BLOCK_STEM_HIT",
        "BLOCK_STEM_PLACE",
        "BLOCK_STEM_STEP",
        "BLOCK_STONE_BREAK",
        "BLOCK_STONE_BUTTON_CLICK_OFF",
        "BLOCK_STONE_BUTTON_CLICK_ON",
        "BLOCK_STONE_FALL",
        "BLOCK_STONE_HIT",
        "BLOCK_STONE_PLACE",
        "BLOCK_STONE_PRESSURE_PLATE_CLICK_OFF",
        "BLOCK_STONE_PRESSURE_PLATE_CLICK_ON",
        "BLOCK_STONE_STEP",
        "BLOCK_SWEET_BERRY_BUSH_BREAK",
        "BLOCK_SWEET_BERRY_BUSH_PLACE",
        "BLOCK_TRIPWIRE_ATTACH",
        "BLOCK_TRIPWIRE_CLICK_OFF",
        "BLOCK_TRIPWIRE_CLICK_ON",
        "BLOCK_TRIPWIRE_DETACH",
        "BLOCK_VINE_STEP",
        "BLOCK_WART_BLOCK_BREAK",
        "BLOCK_WART_BLOCK_FALL",
        "BLOCK_WART_BLOCK_HIT",
        "BLOCK_WART_BLOCK_PLACE",
        "BLOCK_WART_BLOCK_STEP",
        "BLOCK_WATER_AMBIENT",
        "BLOCK_WEEPING_VINES_BREAK",
        "BLOCK_WEEPING_VINES_FALL",
        "BLOCK_WEEPING_VINES_HIT",
        "BLOCK_WEEPING_VINES_PLACE",
        "BLOCK_WEEPING_VINES_STEP",
        "BLOCK_WET_GRASS_BREAK",
        "BLOCK_WET_GRASS_FALL",
        "BLOCK_WET_GRASS_HIT",
        "BLOCK_WET_GRASS_PLACE",
        "BLOCK_WET_GRASS_STEP",
        "BLOCK_WOODEN_BUTTON_CLICK_OFF",
        "BLOCK_WOODEN_BUTTON_CLICK_ON",
        "BLOCK_WOODEN_DOOR_CLOSE",
        "BLOCK_WOODEN_DOOR_OPEN",
        "BLOCK_WOODEN_PRESSURE_PLATE_CLICK_OFF",
        "BLOCK_WOODEN_PRESSURE_PLATE_CLICK_ON",
        "BLOCK_WOODEN_TRAPDOOR_CLOSE",
        "BLOCK_WOODEN_TRAPDOOR_OPEN",
        "BLOCK_WOOD_BREAK",
        "BLOCK_WOOD_FALL",
        "BLOCK_WOOD_HIT",
        "BLOCK_WOOD_PLACE",
        "BLOCK_WOOD_STEP",
        "BLOCK_WOOL_BREAK",
        "BLOCK_WOOL_FALL",
        "BLOCK_WOOL_HIT",
        "BLOCK_WOOL_PLACE",
        "BLOCK_WOOL_STEP",
        "ENCHANT_THORNS_HIT",
        "ENTITY_ARMOR_STAND_BREAK",
        "ENTITY_ARMOR_STAND_FALL",
        "ENTITY_ARMOR_STAND_HIT",
        "ENTITY_ARMOR_STAND_PLACE",
        "ENTITY_ARROW_HIT",
        "ENTITY_ARROW_HIT_PLAYER",
        "ENTITY_ARROW_SHOOT",
        "ENTITY_BAT_AMBIENT",
        "ENTITY_BAT_DEATH",
        "ENTITY_BAT_HURT",
        "ENTITY_BAT_LOOP",
        "ENTITY_BAT_TAKEOFF",
        "ENTITY_BEE_DEATH",
        "ENTITY_BEE_HURT",
        "ENTITY_BEE_LOOP",
        "ENTITY_BEE_LOOP_AGGRESSIVE",
        "ENTITY_BEE_POLLINATE",
        "ENTITY_BEE_STING",
        "ENTITY_BLAZE_AMBIENT",
        "ENTITY_BLAZE_BURN",
        "ENTITY_BLAZE_DEATH",
        "ENTITY_BLAZE_HURT",
        "ENTITY_BLAZE_SHOOT",
        "ENTITY_BOAT_PADDLE_LAND",
        "ENTITY_BOAT_PADDLE_WATER",
        "ENTITY_CAT_AMBIENT",
        "ENTITY_CAT_BEG_FOR_FOOD",
        "ENTITY_CAT_DEATH",
        "ENTITY_CAT_EAT",
        "ENTITY_CAT_HISS",
        "ENTITY_CAT_HURT",
        "ENTITY_CAT_PURR",
        "ENTITY_CAT_PURREOW",
        "ENTITY_CAT_STRAY_AMBIENT",
        "ENTITY_CHICKEN_AMBIENT",
        "ENTITY_CHICKEN_DEATH",
        "ENTITY_CHICKEN_EGG",
        "ENTITY_CHICKEN_HURT",
        "ENTITY_CHICKEN_STEP",
        "ENTITY_COD_AMBIENT",
        "ENTITY_COD_DEATH",
        "ENTITY_COD_FLOP",
        "ENTITY_COD_HURT",
        "ENTITY_COW_AMBIENT",
        "ENTITY_COW_DEATH",
        "ENTITY_COW_HURT",
        "ENTITY_COW_MILK",
        "ENTITY_COW_STEP",
        "ENTITY_CREEPER_DEATH",
        "ENTITY_CREEPER_HURT",
        "ENTITY_CREEPER_PRIMED",
        "ENTITY_DOLPHIN_AMBIENT",
        "ENTITY_DOLPHIN_AMBIENT_WATER",
        "ENTITY_DOLPHIN_ATTACK",
        "ENTITY_DOLPHIN_DEATH",
        "ENTITY_DOLPHIN_EAT",
        "ENTITY_DOLPHIN_HURT",
        "ENTITY_DOLPHIN_JUMP",
        "ENTITY_DOLPHIN_PLAY",
        "ENTITY_DOLPHIN_SPLASH",
        "ENTITY_DOLPHIN_SWIM",
        "ENTITY_DONKEY_AMBIENT",
        "ENTITY_DONKEY_ANGRY",
        "ENTITY_DONKEY_CHEST",
        "ENTITY_DONKEY_DEATH",
        "ENTITY_DONKEY_EAT",
        "ENTITY_DONKEY_HURT",
        "ENTITY_DRAGON_FIREBALL_EXPLODE",
        "ENTITY_DROWNED_AMBIENT",
        "ENTITY_DROWNED_AMBIENT_WATER",
        "ENTITY_DROWNED_DEATH",
        "ENTITY_DROWNED_DEATH_WATER",
        "ENTITY_DROWNED_HURT",
        "ENTITY_DROWNED_HURT_WATER",
        "ENTITY_DROWNED_SHOOT",
        "ENTITY_DROWNED_STEP",
        "ENTITY_DROWNED_SWIM",
        "ENTITY_EGG_THROW",
        "ENTITY_ELDER_GUARDIAN_AMBIENT",
        "ENTITY_ELDER_GUARDIAN_AMBIENT_LAND",
        "ENTITY_ELDER_GUARDIAN_CURSE",
        "ENTITY_ELDER_GUARDIAN_DEATH",
        "ENTITY_ELDER_GUARDIAN_DEATH_LAND",
        "ENTITY_ELDER_GUARDIAN_FLOP",
        "ENTITY_ELDER_GUARDIAN_HURT",
        "ENTITY_ELDER_GUARDIAN_HURT_LAND",
        "ENTITY_ENDERMAN_AMBIENT",
        "ENTITY_ENDERMAN_DEATH",
        "ENTITY_ENDERMAN_HURT",
        "ENTITY_ENDERMAN_SCREAM",
        "ENTITY_ENDERMAN_STARE",
        "ENTITY_ENDERMAN_TELEPORT",
        "ENTITY_ENDERMITE_AMBIENT",
        "ENTITY_ENDERMITE_DEATH",
        "ENTITY_ENDERMITE_HURT",
        "ENTITY_ENDERMITE_STEP",
        "ENTITY_ENDER_DRAGON_AMBIENT",
        "ENTITY_ENDER_DRAGON_DEATH",
        "ENTITY_ENDER_DRAGON_FLAP",
        "ENTITY_ENDER_DRAGON_GROWL",
        "ENTITY_ENDER_DRAGON_HURT",
        "ENTITY_ENDER_DRAGON_SHOOT",
        "ENTITY_ENDER_EYE_DEATH",
        "ENTITY_ENDER_EYE_LAUNCH",
        "ENTITY_ENDER_PEARL_THROW",
        "ENTITY_EVOKER_AMBIENT",
        "ENTITY_EVOKER_CAST_SPELL",
        "ENTITY_EVOKER_CELEBRATE",
        "ENTITY_EVOKER_DEATH",
        "ENTITY_EVOKER_FANGS_ATTACK",
        "ENTITY_EVOKER_HURT",
        "ENTITY_EVOKER_PREPARE_ATTACK",
        "ENTITY_EVOKER_PREPARE_SUMMON",
        "ENTITY_EVOKER_PREPARE_WOLOLO",
        "ENTITY_EXPERIENCE_BOTTLE_THROW",
        "ENTITY_EXPERIENCE_ORB_PICKUP",
        "ENTITY_FIREWORK_ROCKET_BLAST",
        "ENTITY_FIREWORK_ROCKET_BLAST_FAR",
        "ENTITY_FIREWORK_ROCKET_LARGE_BLAST",
        "ENTITY_FIREWORK_ROCKET_LARGE_BLAST_FAR",
        "ENTITY_FIREWORK_ROCKET_LAUNCH",
        "ENTITY_FIREWORK_ROCKET_SHOOT",
        "ENTITY_FIREWORK_ROCKET_TWINKLE",
        "ENTITY_FIREWORK_ROCKET_TWINKLE_FAR",
        "ENTITY_FISHING_BOBBER_RETRIEVE",
        "ENTITY_FISHING_BOBBER_SPLASH",
        "ENTITY_FISHING_BOBBER_THROW",
        "ENTITY_FISH_SWIM",
        "ENTITY_FOX_AGGRO",
        "ENTITY_FOX_AMBIENT",
        "ENTITY_FOX_BITE",
        "ENTITY_FOX_DEATH",
        "ENTITY_FOX_EAT",
        "ENTITY_FOX_HURT",
        "ENTITY_FOX_SCREECH",
        "ENTITY_FOX_SLEEP",
        "ENTITY_FOX_SNIFF",
        "ENTITY_FOX_SPIT",
        "ENTITY_FOX_TELEPORT",
        "ENTITY_GENERIC_BIG_FALL",
        "ENTITY_GENERIC_BURN",
        "ENTITY_GENERIC_DEATH",
        "ENTITY_GENERIC_DRINK",
        "ENTITY_GENERIC_EAT",
        "ENTITY_GENERIC_EXPLODE",
        "ENTITY_GENERIC_EXTINGUISH_FIRE",
        "ENTITY_GENERIC_HURT",
        "ENTITY_GENERIC_SMALL_FALL",
        "ENTITY_GENERIC_SPLASH",
        "ENTITY_GENERIC_SWIM",
        "ENTITY_GHAST_AMBIENT",
        "ENTITY_GHAST_DEATH",
        "ENTITY_GHAST_HURT",
        "ENTITY_GHAST_SCREAM",
        "ENTITY_GHAST_SHOOT",
        "ENTITY_GHAST_WARN",
        "ENTITY_GUARDIAN_AMBIENT",
        "ENTITY_GUARDIAN_AMBIENT_LAND",
        "ENTITY_GUARDIAN_ATTACK",
        "ENTITY_GUARDIAN_DEATH",
        "ENTITY_GUARDIAN_DEATH_LAND",
        "ENTITY_GUARDIAN_FLOP",
        "ENTITY_GUARDIAN_HURT",
        "ENTITY_GUARDIAN_HURT_LAND",
        "ENTITY_HOGLIN_AMBIENT",
        "ENTITY_HOGLIN_ANGRY",
        "ENTITY_HOGLIN_ATTACK",
        "ENTITY_HOGLIN_CONVERTED_TO_ZOMBIFIED",
        "ENTITY_HOGLIN_DEATH",
        "ENTITY_HOGLIN_HURT",
        "ENTITY_HOGLIN_RETREAT",
        "ENTITY_HOGLIN_STEP",
        "ENTITY_HORSE_AMBIENT",
        "ENTITY_HORSE_ANGRY",
        "ENTITY_HORSE_ARMOR",
        "ENTITY_HORSE_BREATHE",
        "ENTITY_HORSE_DEATH",
        "ENTITY_HORSE_EAT",
        "ENTITY_HORSE_GALLOP",
        "ENTITY_HORSE_HURT",
        "ENTITY_HORSE_JUMP",
        "ENTITY_HORSE_LAND",
        "ENTITY_HORSE_SADDLE",
        "ENTITY_HORSE_STEP",
        "ENTITY_HORSE_STEP_WOOD",
        "ENTITY_HOSTILE_BIG_FALL",
        "ENTITY_HOSTILE_DEATH",
        "ENTITY_HOSTILE_HURT",
        "ENTITY_HOSTILE_SMALL_FALL",
        "ENTITY_HOSTILE_SPLASH",
        "ENTITY_HOSTILE_SWIM",
        "ENTITY_HUSK_AMBIENT",
        "ENTITY_HUSK_CONVERTED_TO_ZOMBIE",
        "ENTITY_HUSK_DEATH",
        "ENTITY_HUSK_HURT",
        "ENTITY_HUSK_STEP",
        "ENTITY_ILLUSIONER_AMBIENT",
        "ENTITY_ILLUSIONER_CAST_SPELL",
        "ENTITY_ILLUSIONER_DEATH",
        "ENTITY_ILLUSIONER_HURT",
        "ENTITY_ILLUSIONER_MIRROR_MOVE",
        "ENTITY_ILLUSIONER_PREPARE_BLINDNESS",
        "ENTITY_ILLUSIONER_PREPARE_MIRROR",
        "ENTITY_IRON_GOLEM_ATTACK",
        "ENTITY_IRON_GOLEM_DAMAGE",
        "ENTITY_IRON_GOLEM_DEATH",
        "ENTITY_IRON_GOLEM_HURT",
        "ENTITY_IRON_GOLEM_REPAIR",
        "ENTITY_IRON_GOLEM_STEP",
        "ENTITY_ITEM_BREAK",
        "ENTITY_ITEM_FRAME_ADD_ITEM",
        "ENTITY_ITEM_FRAME_BREAK",
        "ENTITY_ITEM_FRAME_PLACE",
        "ENTITY_ITEM_FRAME_REMOVE_ITEM",
        "ENTITY_ITEM_FRAME_ROTATE_ITEM",
        "ENTITY_ITEM_PICKUP",
        "ENTITY_LEASH_KNOT_BREAK",
        "ENTITY_LEASH_KNOT_PLACE",
        "ENTITY_LIGHTNING_BOLT_IMPACT",
        "ENTITY_LIGHTNING_BOLT_THUNDER",
        "ENTITY_LINGERING_POTION_THROW",
        "ENTITY_LLAMA_AMBIENT",
        "ENTITY_LLAMA_ANGRY",
        "ENTITY_LLAMA_CHEST",
        "ENTITY_LLAMA_DEATH",
        "ENTITY_LLAMA_EAT",
        "ENTITY_LLAMA_HURT",
        "ENTITY_LLAMA_SPIT",
        "ENTITY_LLAMA_STEP",
        "ENTITY_LLAMA_SWAG",
        "ENTITY_MAGMA_CUBE_DEATH",
        "ENTITY_MAGMA_CUBE_DEATH_SMALL",
        "ENTITY_MAGMA_CUBE_HURT",
        "ENTITY_MAGMA_CUBE_HURT_SMALL",
        "ENTITY_MAGMA_CUBE_JUMP",
        "ENTITY_MAGMA_CUBE_SQUISH",
        "ENTITY_MAGMA_CUBE_SQUISH_SMALL",
        "ENTITY_MINECART_INSIDE",
        "ENTITY_MINECART_RIDING",
        "ENTITY_MOOSHROOM_CONVERT",
        "ENTITY_MOOSHROOM_EAT",
        "ENTITY_MOOSHROOM_MILK",
        "ENTITY_MOOSHROOM_SHEAR",
        "ENTITY_MOOSHROOM_SUSPICIOUS_MILK",
        "ENTITY_MULE_AMBIENT",
        "ENTITY_MULE_ANGRY",
        "ENTITY_MULE_CHEST",
        "ENTITY_MULE_DEATH",
        "ENTITY_MULE_EAT",
        "ENTITY_MULE_HURT",
        "ENTITY_OCELOT_AMBIENT",
        "ENTITY_OCELOT_DEATH",
        "ENTITY_OCELOT_HURT",
        "ENTITY_PAINTING_BREAK",
        "ENTITY_PAINTING_PLACE",
        "ENTITY_PANDA_AGGRESSIVE_AMBIENT",
        "ENTITY_PANDA_AMBIENT",
        "ENTITY_PANDA_BITE",
        "ENTITY_PANDA_CANT_BREED",
        "ENTITY_PANDA_DEATH",
        "ENTITY_PANDA_EAT",
        "ENTITY_PANDA_HURT",
        "ENTITY_PANDA_PRE_SNEEZE",
        "ENTITY_PANDA_SNEEZE",
        "ENTITY_PANDA_STEP",
        "ENTITY_PANDA_WORRIED_AMBIENT",
        "ENTITY_PARROT_AMBIENT",
        "ENTITY_PARROT_DEATH",
        "ENTITY_PARROT_EAT",
        "ENTITY_PARROT_FLY",
        "ENTITY_PARROT_HURT",
        "ENTITY_PARROT_IMITATE_BLAZE",
        "ENTITY_PARROT_IMITATE_CREEPER",
        "ENTITY_PARROT_IMITATE_DROWNED",
        "ENTITY_PARROT_IMITATE_ELDER_GUARDIAN",
        "ENTITY_PARROT_IMITATE_ENDERMITE",
        "ENTITY_PARROT_IMITATE_ENDER_DRAGON",
        "ENTITY_PARROT_IMITATE_EVOKER",
        "ENTITY_PARROT_IMITATE_GHAST",
        "ENTITY_PARROT_IMITATE_GUARDIAN",
        "ENTITY_PARROT_IMITATE_HOGLIN",
        "ENTITY_PARROT_IMITATE_HUSK",
        "ENTITY_PARROT_IMITATE_ILLUSIONER",
        "ENTITY_PARROT_IMITATE_MAGMA_CUBE",
        "ENTITY_PARROT_IMITATE_PHANTOM",
        "ENTITY_PARROT_IMITATE_PIGLIN",
        "ENTITY_PARROT_IMITATE_PIGLIN_BRUTE",
        "ENTITY_PARROT_IMITATE_PILLAGER",
        "ENTITY_PARROT_IMITATE_RAVAGER",
        "ENTITY_PARROT_IMITATE_SHULKER",
        "ENTITY_PARROT_IMITATE_SILVERFISH",
        "ENTITY_PARROT_IMITATE_SKELETON",
        "ENTITY_PARROT_IMITATE_SLIME",
        "ENTITY_PARROT_IMITATE_SPIDER",
        "ENTITY_PARROT_IMITATE_STRAY",
        "ENTITY_PARROT_IMITATE_VEX",
        "ENTITY_PARROT_IMITATE_VINDICATOR",
        "ENTITY_PARROT_IMITATE_WITCH",
        "ENTITY_PARROT_IMITATE_WITHER",
        "ENTITY_PARROT_IMITATE_WITHER_SKELETON",
        "ENTITY_PARROT_IMITATE_ZOGLIN",
        "ENTITY_PARROT_IMITATE_ZOMBIE",
        "ENTITY_PARROT_IMITATE_ZOMBIE_VILLAGER",
        "ENTITY_PARROT_STEP",
        "ENTITY_PHANTOM_AMBIENT",
        "ENTITY_PHANTOM_BITE",
        "ENTITY_PHANTOM_DEATH",
        "ENTITY_PHANTOM_FLAP",
        "ENTITY_PHANTOM_HURT",
        "ENTITY_PHANTOM_SWOOP",
        "ENTITY_PIGLIN_ADMIRING_ITEM",
        "ENTITY_PIGLIN_AMBIENT",
        "ENTITY_PIGLIN_ANGRY",
        "ENTITY_PIGLIN_BRUTE_AMBIENT",
        "ENTITY_PIGLIN_BRUTE_ANGRY",
        "ENTITY_PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED",
        "ENTITY_PIGLIN_BRUTE_DEATH",
        "ENTITY_PIGLIN_BRUTE_HURT",
        "ENTITY_PIGLIN_BRUTE_STEP",
        "ENTITY_PIGLIN_CELEBRATE",
        "ENTITY_PIGLIN_CONVERTED_TO_ZOMBIFIED",
        "ENTITY_PIGLIN_DEATH",
        "ENTITY_PIGLIN_HURT",
        "ENTITY_PIGLIN_JEALOUS",
        "ENTITY_PIGLIN_RETREAT",
        "ENTITY_PIGLIN_STEP",
        "ENTITY_PIG_AMBIENT",
        "ENTITY_PIG_DEATH",
        "ENTITY_PIG_HURT",
        "ENTITY_PIG_SADDLE",
        "ENTITY_PIG_STEP",
        "ENTITY_PILLAGER_AMBIENT",
        "ENTITY_PILLAGER_CELEBRATE",
        "ENTITY_PILLAGER_DEATH",
        "ENTITY_PILLAGER_HURT",
        "ENTITY_PLAYER_ATTACK_CRIT",
        "ENTITY_PLAYER_ATTACK_KNOCKBACK",
        "ENTITY_PLAYER_ATTACK_NODAMAGE",
        "ENTITY_PLAYER_ATTACK_STRONG",
        "ENTITY_PLAYER_ATTACK_SWEEP",
        "ENTITY_PLAYER_ATTACK_WEAK",
        "ENTITY_PLAYER_BIG_FALL",
        "ENTITY_PLAYER_BREATH",
        "ENTITY_PLAYER_BURP",
        "ENTITY_PLAYER_DEATH",
        "ENTITY_PLAYER_HURT",
        "ENTITY_PLAYER_HURT_DROWN",
        "ENTITY_PLAYER_HURT_ON_FIRE",
        "ENTITY_PLAYER_HURT_SWEET_BERRY_BUSH",
        "ENTITY_PLAYER_LEVELUP",
        "ENTITY_PLAYER_SMALL_FALL",
        "ENTITY_PLAYER_SPLASH",
        "ENTITY_PLAYER_SPLASH_HIGH_SPEED",
        "ENTITY_PLAYER_SWIM",
        "ENTITY_POLAR_BEAR_AMBIENT",
        "ENTITY_POLAR_BEAR_AMBIENT_BABY",
        "ENTITY_POLAR_BEAR_DEATH",
        "ENTITY_POLAR_BEAR_HURT",
        "ENTITY_POLAR_BEAR_STEP",
        "ENTITY_POLAR_BEAR_WARNING",
        "ENTITY_PUFFER_FISH_AMBIENT",
        "ENTITY_PUFFER_FISH_BLOW_OUT",
        "ENTITY_PUFFER_FISH_BLOW_UP",
        "ENTITY_PUFFER_FISH_DEATH",
        "ENTITY_PUFFER_FISH_FLOP",
        "ENTITY_PUFFER_FISH_HURT",
        "ENTITY_PUFFER_FISH_STING",
        "ENTITY_RABBIT_AMBIENT",
        "ENTITY_RABBIT_ATTACK",
        "ENTITY_RABBIT_DEATH",
        "ENTITY_RABBIT_HURT",
        "ENTITY_RABBIT_JUMP",
        "ENTITY_RAVAGER_AMBIENT",
        "ENTITY_RAVAGER_ATTACK",
        "ENTITY_RAVAGER_CELEBRATE",
        "ENTITY_RAVAGER_DEATH",
        "ENTITY_RAVAGER_HURT",
        "ENTITY_RAVAGER_ROAR",
        "ENTITY_RAVAGER_STEP",
        "ENTITY_RAVAGER_STUNNED",
        "ENTITY_SALMON_AMBIENT",
        "ENTITY_SALMON_DEATH",
        "ENTITY_SALMON_FLOP",
        "ENTITY_SALMON_HURT",
        "ENTITY_SHEEP_AMBIENT",
        "ENTITY_SHEEP_DEATH",
        "ENTITY_SHEEP_HURT",
        "ENTITY_SHEEP_SHEAR",
        "ENTITY_SHEEP_STEP",
        "ENTITY_SHULKER_AMBIENT",
        "ENTITY_SHULKER_BULLET_HIT",
        "ENTITY_SHULKER_BULLET_HURT",
        "ENTITY_SHULKER_CLOSE",
        "ENTITY_SHULKER_DEATH",
        "ENTITY_SHULKER_HURT",
        "ENTITY_SHULKER_HURT_CLOSED",
        "ENTITY_SHULKER_OPEN",
        "ENTITY_SHULKER_SHOOT",
        "ENTITY_SHULKER_TELEPORT",
        "ENTITY_SILVERFISH_AMBIENT",
        "ENTITY_SILVERFISH_DEATH",
        "ENTITY_SILVERFISH_HURT",
        "ENTITY_SILVERFISH_STEP",
        "ENTITY_SKELETON_AMBIENT",
        "ENTITY_SKELETON_DEATH",
        "ENTITY_SKELETON_HORSE_AMBIENT",
        "ENTITY_SKELETON_HORSE_AMBIENT_WATER",
        "ENTITY_SKELETON_HORSE_DEATH",
        "ENTITY_SKELETON_HORSE_GALLOP_WATER",
        "ENTITY_SKELETON_HORSE_HURT",
        "ENTITY_SKELETON_HORSE_JUMP_WATER",
        "ENTITY_SKELETON_HORSE_STEP_WATER",
        "ENTITY_SKELETON_HORSE_SWIM",
        "ENTITY_SKELETON_HURT",
        "ENTITY_SKELETON_SHOOT",
        "ENTITY_SKELETON_STEP",
        "ENTITY_SLIME_ATTACK",
        "ENTITY_SLIME_DEATH",
        "ENTITY_SLIME_DEATH_SMALL",
        "ENTITY_SLIME_HURT",
        "ENTITY_SLIME_HURT_SMALL",
        "ENTITY_SLIME_JUMP",
        "ENTITY_SLIME_JUMP_SMALL",
        "ENTITY_SLIME_SQUISH",
        "ENTITY_SLIME_SQUISH_SMALL",
        "ENTITY_SNOWBALL_THROW",
        "ENTITY_SNOW_GOLEM_AMBIENT",
        "ENTITY_SNOW_GOLEM_DEATH",
        "ENTITY_SNOW_GOLEM_HURT",
        "ENTITY_SNOW_GOLEM_SHEAR",
        "ENTITY_SNOW_GOLEM_SHOOT",
        "ENTITY_SPIDER_AMBIENT",
        "ENTITY_SPIDER_DEATH",
        "ENTITY_SPIDER_HURT",
        "ENTITY_SPIDER_STEP",
        "ENTITY_SPLASH_POTION_BREAK",
        "ENTITY_SPLASH_POTION_THROW",
        "ENTITY_SQUID_AMBIENT",
        "ENTITY_SQUID_DEATH",
        "ENTITY_SQUID_HURT",
        "ENTITY_SQUID_SQUIRT",
        "ENTITY_STRAY_AMBIENT",
        "ENTITY_STRAY_DEATH",
        "ENTITY_STRAY_HURT",
        "ENTITY_STRAY_STEP",
        "ENTITY_STRIDER_AMBIENT",
        "ENTITY_STRIDER_DEATH",
        "ENTITY_STRIDER_EAT",
        "ENTITY_STRIDER_HAPPY",
        "ENTITY_STRIDER_HURT",
        "ENTITY_STRIDER_RETREAT",
        "ENTITY_STRIDER_SADDLE",
        "ENTITY_STRIDER_STEP",
        "ENTITY_STRIDER_STEP_LAVA",
        "ENTITY_TNT_PRIMED",
        "ENTITY_TROPICAL_FISH_AMBIENT",
        "ENTITY_TROPICAL_FISH_DEATH",
        "ENTITY_TROPICAL_FISH_FLOP",
        "ENTITY_TROPICAL_FISH_HURT",
        "ENTITY_TURTLE_AMBIENT_LAND",
        "ENTITY_TURTLE_DEATH",
        "ENTITY_TURTLE_DEATH_BABY",
        "ENTITY_TURTLE_EGG_BREAK",
        "ENTITY_TURTLE_EGG_CRACK",
        "ENTITY_TURTLE_EGG_HATCH",
        "ENTITY_TURTLE_HURT",
        "ENTITY_TURTLE_HURT_BABY",
        "ENTITY_TURTLE_LAY_EGG",
        "ENTITY_TURTLE_SHAMBLE",
        "ENTITY_TURTLE_SHAMBLE_BABY",
        "ENTITY_TURTLE_SWIM",
        "ENTITY_VEX_AMBIENT",
        "ENTITY_VEX_CHARGE",
        "ENTITY_VEX_DEATH",
        "ENTITY_VEX_HURT",
        "ENTITY_VILLAGER_AMBIENT",
        "ENTITY_VILLAGER_CELEBRATE",
        "ENTITY_VILLAGER_DEATH",
        "ENTITY_VILLAGER_HURT",
        "ENTITY_VILLAGER_NO",
        "ENTITY_VILLAGER_TRADE",
        "ENTITY_VILLAGER_WORK_ARMORER",
        "ENTITY_VILLAGER_WORK_BUTCHER",
        "ENTITY_VILLAGER_WORK_CARTOGRAPHER",
        "ENTITY_VILLAGER_WORK_CLERIC",
        "ENTITY_VILLAGER_WORK_FARMER",
        "ENTITY_VILLAGER_WORK_FISHERMAN",
        "ENTITY_VILLAGER_WORK_FLETCHER",
        "ENTITY_VILLAGER_WORK_LEATHERWORKER",
        "ENTITY_VILLAGER_WORK_LIBRARIAN",
        "ENTITY_VILLAGER_WORK_MASON",
        "ENTITY_VILLAGER_WORK_SHEPHERD",
        "ENTITY_VILLAGER_WORK_TOOLSMITH",
        "ENTITY_VILLAGER_WORK_WEAPONSMITH",
        "ENTITY_VILLAGER_YES",
        "ENTITY_VINDICATOR_AMBIENT",
        "ENTITY_VINDICATOR_CELEBRATE",
        "ENTITY_VINDICATOR_DEATH",
        "ENTITY_VINDICATOR_HURT",
        "ENTITY_WANDERING_TRADER_AMBIENT",
        "ENTITY_WANDERING_TRADER_DEATH",
        "ENTITY_WANDERING_TRADER_DISAPPEARED",
        "ENTITY_WANDERING_TRADER_DRINK_MILK",
        "ENTITY_WANDERING_TRADER_DRINK_POTION",
        "ENTITY_WANDERING_TRADER_HURT",
        "ENTITY_WANDERING_TRADER_NO",
        "ENTITY_WANDERING_TRADER_REAPPEARED",
        "ENTITY_WANDERING_TRADER_TRADE",
        "ENTITY_WANDERING_TRADER_YES",
        "ENTITY_WITCH_AMBIENT",
        "ENTITY_WITCH_CELEBRATE",
        "ENTITY_WITCH_DEATH",
        "ENTITY_WITCH_DRINK",
        "ENTITY_WITCH_HURT",
        "ENTITY_WITCH_THROW",
        "ENTITY_WITHER_AMBIENT",
        "ENTITY_WITHER_BREAK_BLOCK",
        "ENTITY_WITHER_DEATH",
        "ENTITY_WITHER_HURT",
        "ENTITY_WITHER_SHOOT",
        "ENTITY_WITHER_SKELETON_AMBIENT",
        "ENTITY_WITHER_SKELETON_DEATH",
        "ENTITY_WITHER_SKELETON_HURT",
        "ENTITY_WITHER_SKELETON_STEP",
        "ENTITY_WITHER_SPAWN",
        "ENTITY_WOLF_AMBIENT",
        "ENTITY_WOLF_DEATH",
        "ENTITY_WOLF_GROWL",
        "ENTITY_WOLF_HOWL",
        "ENTITY_WOLF_HURT",
        "ENTITY_WOLF_PANT",
        "ENTITY_WOLF_SHAKE",
        "ENTITY_WOLF_STEP",
        "ENTITY_WOLF_WHINE",
        "ENTITY_ZOGLIN_AMBIENT",
        "ENTITY_ZOGLIN_ANGRY",
        "ENTITY_ZOGLIN_ATTACK",
        "ENTITY_ZOGLIN_DEATH",
        "ENTITY_ZOGLIN_HURT",
        "ENTITY_ZOGLIN_STEP",
        "ENTITY_ZOMBIE_AMBIENT",
        "ENTITY_ZOMBIE_ATTACK_IRON_DOOR",
        "ENTITY_ZOMBIE_ATTACK_WOODEN_DOOR",
        "ENTITY_ZOMBIE_BREAK_WOODEN_DOOR",
        "ENTITY_ZOMBIE_CONVERTED_TO_DROWNED",
        "ENTITY_ZOMBIE_DEATH",
        "ENTITY_ZOMBIE_DESTROY_EGG",
        "ENTITY_ZOMBIE_HORSE_AMBIENT",
        "ENTITY_ZOMBIE_HORSE_DEATH",
        "ENTITY_ZOMBIE_HORSE_HURT",
        "ENTITY_ZOMBIE_HURT",
        "ENTITY_ZOMBIE_INFECT",
        "ENTITY_ZOMBIE_STEP",
        "ENTITY_ZOMBIE_VILLAGER_AMBIENT",
        "ENTITY_ZOMBIE_VILLAGER_CONVERTED",
        "ENTITY_ZOMBIE_VILLAGER_CURE",
        "ENTITY_ZOMBIE_VILLAGER_DEATH",
        "ENTITY_ZOMBIE_VILLAGER_HURT",
        "ENTITY_ZOMBIE_VILLAGER_STEP",
        "ENTITY_ZOMBIFIED_PIGLIN_AMBIENT",
        "ENTITY_ZOMBIFIED_PIGLIN_ANGRY",
        "ENTITY_ZOMBIFIED_PIGLIN_DEATH",
        "ENTITY_ZOMBIFIED_PIGLIN_HURT",
        "EVENT_RAID_HORN",
        "ITEM_ARMOR_EQUIP_CHAIN",
        "ITEM_ARMOR_EQUIP_DIAMOND",
        "ITEM_ARMOR_EQUIP_ELYTRA",
        "ITEM_ARMOR_EQUIP_GENERIC",
        "ITEM_ARMOR_EQUIP_GOLD",
        "ITEM_ARMOR_EQUIP_IRON",
        "ITEM_ARMOR_EQUIP_LEATHER",
        "ITEM_ARMOR_EQUIP_NETHERITE",
        "ITEM_ARMOR_EQUIP_TURTLE",
        "ITEM_AXE_STRIP",
        "ITEM_BOOK_PAGE_TURN",
        "ITEM_BOOK_PUT",
        "ITEM_BOTTLE_EMPTY",
        "ITEM_BOTTLE_FILL",
        "ITEM_BOTTLE_FILL_DRAGONBREATH",
        "ITEM_BUCKET_EMPTY",
        "ITEM_BUCKET_EMPTY_FISH",
        "ITEM_BUCKET_EMPTY_LAVA",
        "ITEM_BUCKET_FILL",
        "ITEM_BUCKET_FILL_FISH",
        "ITEM_BUCKET_FILL_LAVA",
        "ITEM_CHORUS_FRUIT_TELEPORT",
        "ITEM_CROP_PLANT",
        "ITEM_CROSSBOW_HIT",
        "ITEM_CROSSBOW_LOADING_END",
        "ITEM_CROSSBOW_LOADING_MIDDLE",
        "ITEM_CROSSBOW_LOADING_START",
        "ITEM_CROSSBOW_QUICK_CHARGE_1",
        "ITEM_CROSSBOW_QUICK_CHARGE_2",
        "ITEM_CROSSBOW_QUICK_CHARGE_3",
        "ITEM_CROSSBOW_SHOOT",
        "ITEM_ELYTRA_FLYING",
        "ITEM_FIRECHARGE_USE",
        "ITEM_FLINTANDSTEEL_USE",
        "ITEM_HOE_TILL",
        "ITEM_HONEY_BOTTLE_DRINK",
        "ITEM_LODESTONE_COMPASS_LOCK",
        "ITEM_NETHER_WART_PLANT",
        "ITEM_SHIELD_BLOCK",
        "ITEM_SHIELD_BREAK",
        "ITEM_SHOVEL_FLATTEN",
        "ITEM_SWEET_BERRIES_PICK_FROM_BUSH",
        "ITEM_TOTEM_USE",
        "ITEM_TRIDENT_HIT",
        "ITEM_TRIDENT_HIT_GROUND",
        "ITEM_TRIDENT_RETURN",
        "ITEM_TRIDENT_RIPTIDE_1",
        "ITEM_TRIDENT_RIPTIDE_2",
        "ITEM_TRIDENT_RIPTIDE_3",
        "ITEM_TRIDENT_THROW",
        "ITEM_TRIDENT_THUNDER",
        "MUSIC_CREATIVE",
        "MUSIC_CREDITS",
        "MUSIC_DISC_11",
        "MUSIC_DISC_13",
        "MUSIC_DISC_BLOCKS",
        "MUSIC_DISC_CAT",
        "MUSIC_DISC_CHIRP",
        "MUSIC_DISC_FAR",
        "MUSIC_DISC_MALL",
        "MUSIC_DISC_MELLOHI",
        "MUSIC_DISC_PIGSTEP",
        "MUSIC_DISC_STAL",
        "MUSIC_DISC_STRAD",
        "MUSIC_DISC_WAIT",
        "MUSIC_DISC_WARD",
        "MUSIC_DRAGON",
        "MUSIC_END",
        "MUSIC_GAME",
        "MUSIC_MENU",
        "MUSIC_NETHER_BASALT_DELTAS",
        "MUSIC_NETHER_CRIMSON_FOREST",
        "MUSIC_NETHER_NETHER_WASTES",
        "MUSIC_NETHER_SOUL_SAND_VALLEY",
        "MUSIC_NETHER_WARPED_FOREST",
        "MUSIC_UNDER_WATER",
        "PARTICLE_SOUL_ESCAPE",
        "UI_BUTTON_CLICK",
        "UI_CARTOGRAPHY_TABLE_TAKE_RESULT",
        "UI_LOOM_SELECT_PATTERN",
        "UI_LOOM_TAKE_RESULT",
        "UI_STONECUTTER_SELECT_RECIPE",
        "UI_STONECUTTER_TAKE_RESULT",
        "UI_TOAST_CHALLENGE_COMPLETE",
        "UI_TOAST_IN",
        "UI_TOAST_OUT",
        "WEATHER_RAIN",
        "WEATHER_RAIN_ABOVE"
      ]
    },
    "vector": {
      "description": "ベクトルです。",
      "$ref": "#/definitions/location"
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}