name: Build and test with Scenamatica
on:
  push:
    paths:
      - "Scenamatica/**"
  pull_request:
    paths:
      - "Scenamatica/**"
  workflow_dispatch:


permissions:
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-scenamatica-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build with Maven
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Change directory to scenamatica
        run: cd Scenamatica
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        id: sj
        with:
          java-version: 8
          distribution: zulu
          cache: maven
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.8.2
      - uses: PeyaPeyaPeyang/nmsaction@v5
        if: "steps.sj.outputs.cache-hit != 'true'"
        with:
          rev: 1.16.5, 1.13.2, 1.14.4
      - name: Install nms into m2
        if: "steps.sj.outputs.cache-hit != 'true'"
        run: |
          mkdir -p $HOME/.m2/repository
          cp -a nms-build/.m2/repository/. $HOME/.m2/repository
      - name: Build with Maven
        run: |
          mvn -B package --file Scenamatica/pom.xml -D"jar.finalName=Scenamatica" -P debug
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: scenamatica
          path: Scenamatica/ScenamaticaPlugin/target/Scenamatica.jar
          retention-days: 1
          if-no-files-found: error

  test-v1-16-15:
    name: Self-test with Scenamatica(1.16.5, 16)
    runs-on: self-hosted
    needs: build
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: scenamatica
      - name: Run Scenamatica tests
        uses: teamkun/scenamatica-action@main
        with:
          plugin: Scenamatica.jar
          java: 16
          minecraft: 1.16.5
          server-dir: server-1.16.5
          scenamatica: 1.1.0-pre1
          report-artifact-name: scenamatica-reports-1.16.5
          java-arguments: "-Xms128M -Xmx2G -XX:+UseG1GC -XX:+ParallelRefProcEnabled -XX:MaxGCPauseMillis=200 -XX:+UnlockExperimentalVMOptions -XX:+DisableExplicitGC -XX:+AlwaysPreTouch -XX:G1NewSizePercent=30 -XX:G1MaxNewSizePercent=40 -XX:G1HeapRegionSize=8M -XX:G1ReservePercent=20 -XX:G1HeapWastePercent=5 -XX:G1MixedGCCountTarget=4 -XX:InitiatingHeapOccupancyPercent=15 -XX:G1MixedGCLiveThresholdPercent=90 -XX:G1RSetUpdatingPauseTimePercent=5 -XX:SurvivorRatio=32 -XX:+PerfDisableSharedMem -XX:MaxTenuringThreshold=1 -Dusing.aikars.flags=https://mcflags.emc.gs/ -Daikars.new.flags=true"
        env:
          NO_SCENAMATICA: true
        timeout-minutes: 60
  test-other-versions:
    name: Self-test with Scenamatica
    runs-on: self-hosted
    needs: test-v1-16-15
    strategy:
      fail-fast: false
      matrix:
        include:
          - minecraft: 1.13.2
            java: 12
          - minecraft: 1.14.4
            java: 12
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: scenamatica
      - name: Run Scenamatica tests
        uses: teamkun/scenamatica-action@main
        with:
          plugin: Scenamatica.jar
          java: ${{ matrix.java }}
          minecraft: ${{ matrix.minecraft }}
          server-dir: server-${{ matrix.minecraft }}
          scenamatica: 1.1.0-pre1
          report-artifact-name: scenamatica-reports-${{ matrix.minecraft }}
          java-arguments: "-Xms128M -Xmx4G -XX:+UseG1GC -XX:+ParallelRefProcEnabled -XX:MaxGCPauseMillis=200 -XX:+UnlockExperimentalVMOptions -XX:+DisableExplicitGC -XX:+AlwaysPreTouch -XX:G1NewSizePercent=30 -XX:G1MaxNewSizePercent=40 -XX:G1HeapRegionSize=8M -XX:G1ReservePercent=20 -XX:G1HeapWastePercent=5 -XX:G1MixedGCCountTarget=4 -XX:InitiatingHeapOccupancyPercent=15 -XX:G1MixedGCLiveThresholdPercent=90 -XX:G1RSetUpdatingPauseTimePercent=5 -XX:SurvivorRatio=32 -XX:+PerfDisableSharedMem -XX:MaxTenuringThreshold=1 -Dusing.aikars.flags=https://mcflags.emc.gs/ -Daikars.new.flags=true"
        env:
          NO_SCENAMATICA: true
        timeout-minutes: 60
  clean:
    name: Clean up
    runs-on: self-hosted
    if: always()
    needs: test-other-versions
    steps:
      - name: Clean artifacts
        if: always()
        uses: geekyeggo/delete-artifact@v2
        with:
          name: scenamatica
